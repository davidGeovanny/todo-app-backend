{"version":3,"sources":["routers/PublicRoutes.js","routers/PrivateRoutes.js","hooks/useForm.js","types/types.js","helpers/fetch.js","actions/authActions.js","components/auth/Login.js","components/ui/Loading/Loading.js","components/ui/Navbar/NavBar.js","components/projects/NoProject.js","components/projects/ProjectCard.js","helpers/sort.js","helpers/filter.js","components/projects/Projects.js","components/ui/FloatingButton/FloatingButton.js","components/ui/Checkbox/CustomCheckbox.js","components/ui/Dropdown/DropdownItem.js","components/ui/Dropdown/DropdownItems.js","components/ui/Dropdown/CustomDropdown.js","data/optionProjects.js","actions/projectActions.js","components/projects/ProjectScreen.js","components/projects/NoProjectFound.js","components/projects/ProjectForm.js","actions/uiActions.js","actions/activityActions.js","components/activities/ActivityCard.js","components/activities/Activities.js","components/notes/Note.js","components/notes/Notes.js","components/notes/NoNotes.js","components/notes/NotesSection.js","components/activities/ActivityNotes.js","components/messages/NoMessages.js","components/messages/Message.js","components/messages/Messages.js","components/messages/MessagesSection.js","components/activities/ActivityMessages.js","components/notes/NoteForm.js","components/messages/MessageForm.js","components/ui/Tabs/Navtabs.js","components/ui/Tabs/Paneltabs.js","components/ui/Modal/CustomModal.js","components/ui/Modal/ModalHeader.js","components/ui/Modal/ModalBody.js","components/activities/ActivityInfo.js","components/activities/ActivityForm.js","components/activities/NoActivities.js","components/projects/ProjectInfo.js","components/activities/ActivityScreen.js","routers/DashboardRoutes.js","routers/AppRouter.js","reducers/authReducer.js","reducers/uiReducer.js","reducers/projectReducer.js","reducers/activityReducer.js","reducers/rootReducer.js","store/store.js","TodoApp.js","index.js"],"names":["PublicRoutes","isAuthenticated","Component","component","rest","props","to","PrivateRoutes","useForm","initialState","useState","formValues","setFormValues","reset","newFormState","handleInputChange","e","target","name","value","types","baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","login","user","type","payload","checkingFinish","logout","Login","dispatch","useDispatch","loginEmail","loginPassword","formLoginValues","handleLoginInputChange","registerEmail","registerPassword","registerPasswordRepeat","registerName","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","key","errors","msg","hasOwnProperty","error","Swal","fire","title","html","icon","placeholder","autoComplete","onChange","text","allowOutsideClick","onBeforeOpen","showLoading","Loading","spinnerVariant","spinnerType","variant","size","role","NavBar","Navbar","bg","expand","sticky","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","Item","Divider","Button","onClick","clear","NoProject","ProjectCard","area","description","style","backgroundImage","arrayObjectsSort","order","b","varA","toUpperCase","varB","comparison","findElementById","elements","auxTempElement","find","element","Projects","useSelector","state","projects","conditionShowProjects","showFinishedProjects","shownProjects","setShownProjects","useEffect","doneCondition","sortCondition","auxTempProjects","filter","project","done","sort","filterProjects","map","index","FloatingButton","btnVariant","aditionalClass","CustomCheckbox","checked","htmlFor","DropdownItem","Dropdown","DropdownItems","dropdownVariant","items","Menu","item","CustomDropdown","textLabel","onSelect","textBeforeDropdown","zIndex","optionProjects","projectLoaded","setActiveProject","idProject","clearActiveProject","addedProject","updatedProject","doneProject","ProjectScreen","history","length","optionSelected","parseInt","split","push","NoProjectFound","ProjectForm","activeProject","loading","path","useLocation","pathname","formTitle","formArea","formDescription","goBack","Form","getState","projectObject","close","console","log","startUpdateProject","startAddProject","Row","Col","Label","Control","Text","Group","controlId","as","rows","block","hideModal","showModal","hideSideModal","hideConfirmModal","setModalIsForm","loadedActitivities","activities","loadingFinish","setActiveActivity","idActivity","addedNote","note","checkedNote","doneActivity","addedMessage","message","addedActivity","activity","updatedActivity","deletedActivity","ActivityCard","notes","date","dateActivity","moment","format","Card","Header","count","i","countFinishedNotes","Body","Footer","Activities","activitiesCompleted","activitiesNotCompleted","projectActivities","setProjectActivities","filterActivities","created_at","Note","ListGroup","activeActivity","noteObject","activityDone","projectDone","startCheckNote","Notes","NoNotes","NotesSection","ActivityNotes","show","NoMessages","Message","transformDate","startOf","fromNow","img","src","alt","Messages","messages","MessagesSection","ActivityMessages","NoteForm","textNote","startAddNote","MessageForm","textMessage","auth","messageObject","startAddMessage","Navtabs","colorNavtab","tabNotesOpen","setTabNotesOpen","Paneltabs","children","CustomModal","modalVariant","fadePosition","styleModal","position","header","openModal","onHide","modalStyle","modalPosition","Modal","aria-labelledby","dialogClassName","ModalHeader","classColor","textColor","closeButton","Title","ModalBody","ActivityInfo","openSideModal","ui","titleHeader","modalHeader","ActivityForm","activityObject","startUpdateActivity","startAddActivity","NoActivities","onClickFormActivity","ProjectInfo","OverlayTrigger","placement","overlay","Tooltip","ActivityScreen","projectLoading","openConfirmModal","isForm","infoProject","setInfoProject","startDateActivity","endDateActivity","updated_at","onHideConfirmModal","sectionActivityHeader","startLoadActivities","DashboardRoutes","exact","AppRouter","checking","confirmModal","activeNote","activeMessage","rootReducer","combineReducers","action","tempProject","toString","tempActivity","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","TodoApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f3f5d324.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoutes = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route \r\n            { ...rest }\r\n            component={\r\n                ( props ) => (\r\n                    ( !isAuthenticated )\r\n                        ? <Component { ...props } />\r\n                        : <Redirect to=\"/\" />\r\n                )\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoutes.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoutes = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route \r\n            { ...rest }\r\n            component={\r\n                ( props ) => (\r\n                    ( isAuthenticated )\r\n                        ? <Component { ...props } />\r\n                        : <Redirect to=\"/login\" />\r\n                )\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoutes.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n};\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    const [formValues, setFormValues] = useState( initialState );\r\n\r\n    const reset = (newFormState = initialState) => {\r\n        setFormValues( newFormState );\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [ e.target.name ]: e.target.value\r\n        });\r\n    }\r\n\r\n    return [ formValues, handleInputChange, reset ];\r\n}","export const types = {\r\n    authLogin: '[Auth] Login',\r\n    authCheckingFinish: '[Auth] Finish checking login state',\r\n    authLogout: '[Auth] Start logout',\r\n\r\n    uiShowModal: '[UI] Show modal',\r\n    uiHideModal: '[UI] Hide modal',\r\n    uiShowSideModal: '[UI] Show side modal',\r\n    uiHideSideModal: '[UI] Hide side modal',\r\n    uiShowConfirmModal: '[UI] Show confirm modal',\r\n    uiHideConfirmModal: '[UI] Hide confirm modal',\r\n    \r\n    uiIsFormModal: '[UI] Form modal',\r\n    uiIsInfoModal: '[UI] Info modal',\r\n\r\n    projectLoadedProjects: '[Project] Loaded projects',\r\n    projectSetActiveProject: '[Project] Set active project',\r\n    projectClearActiveProject: '[Project] Clear active project',\r\n    projectAddedProject: '[Project] Added project',\r\n    projectUpdatedProject: '[Project] Updated project',\r\n    projectDoneProject: '[Project] Done project',\r\n\r\n    projectShowFinishedProjects: '[Project] Show finished projects',\r\n    projectConditionShowProjects: '[Project] Condition show projects',\r\n    \r\n    activityLoadingFinish: '[Activity] Loading finish',\r\n    activityLoadedActivities: '[Activity] Loaded activities',\r\n    activitySetActiveActivity: '[Activity] Set active activity',\r\n    activityAddedNote: '[Activity] Added note',\r\n    activityCheckedNote: '[Activity] Checked note',\r\n    activityAddedMessage: '[Activity] Added message',\r\n    activityAddedActivity: '[Activity] Added activity',\r\n    activityUpdatedActivity: '[Activity] Updated activity',\r\n    activityDoneActivity: '[Activity] Done activity',\r\n    activityDeletedActivity: '[Activity] Deleted activity',\r\n    activityClearActiveActivity: '[Activity] Clear active activity',\r\n};","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchWithoutToken = ( endpoint, data, method = 'GET' ) => {\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n\r\n    if( method === 'GET' ) {\r\n        return fetch( url );\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify( data ),\r\n        });\r\n    }\r\n};\r\n\r\nconst fetchWithToken = ( endpoint, data, method = 'GET' ) => {\r\n    const url = `${ baseUrl }/${ endpoint }`;\r\n    const token = localStorage.getItem('token') || '';\r\n\r\n    if( method === 'GET' ) {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token,\r\n            }\r\n        });\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-token': token,\r\n            },\r\n            body: JSON.stringify( data ),\r\n        });\r\n    }\r\n};\r\n\r\nexport {\r\n    fetchWithoutToken,\r\n    fetchWithToken,\r\n}","import Swal from \"sweetalert2\";\r\nimport { types } from \"../types/types\";\r\nimport { fetchWithoutToken, fetchWithToken } from \"../helpers/fetch\";\r\n\r\nexport const startLogin = ( email, password ) => {\r\n    return async ( dispatch ) => {\r\n        const resp = await fetchWithoutToken( 'auth/', { email, password }, 'POST' );\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ) {\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login(\r\n                { \r\n                    uid: body.uid, \r\n                    name: body.name \r\n                }\r\n            ));\r\n        } else {\r\n            const { errors } = body;\r\n            let msg = '';\r\n            for (const key in errors) {\r\n                if (errors.hasOwnProperty(key)) {\r\n                    const error = errors[key];\r\n                    msg += `<li>${ error.msg }</li>`;\r\n                }\r\n            }\r\n\r\n            Swal.fire({\r\n                title: 'Error',\r\n                html: `<ul>${ msg }</ul>`,\r\n                icon: 'error',\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\nconst login = ( user ) => {\r\n    return {\r\n        type: types.authLogin,\r\n        payload: user\r\n    };\r\n};\r\n\r\nexport const startRegister = ( name, email, password ) => {\r\n    return async ( dispatch ) => {\r\n\r\n        Swal.fire({\r\n            title: 'Verificando datos',\r\n            text: 'Por favor espere...',\r\n            allowOutsideClick: false,\r\n            onBeforeOpen: () => {\r\n                Swal.showLoading();\r\n            },\r\n        });\r\n\r\n        const resp = await fetchWithoutToken( 'auth/new', { name, email, password }, 'POST' );\r\n\r\n        const body = await resp.json();\r\n\r\n        // Swal.close();\r\n\r\n        if( body.ok ) {\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login(\r\n                { \r\n                    uid: body.uid, \r\n                    name: body.name \r\n                }\r\n            ));\r\n        } else {\r\n            const { errors } = body;\r\n            let msg = '';\r\n            for (const key in errors) {\r\n                if (errors.hasOwnProperty(key)) {\r\n                    const error = errors[key];\r\n                    msg += `<li>${ error.msg }</li>`;\r\n                }\r\n            }\r\n\r\n            Swal.fire({\r\n                title: 'Error',\r\n                html: `<ul>${ msg }</ul>`,\r\n                icon: 'error',\r\n            });\r\n            \r\n            dispatch( checkingFinish() );\r\n        }\r\n    };\r\n};\r\n\r\nexport const startChecking = () => {\r\n    return async ( dispatch ) => {\r\n        const resp = await fetchWithToken( 'auth/renew' );\r\n\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ) {\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() );\r\n\r\n            dispatch( login(\r\n                { \r\n                    uid: body.uid, \r\n                    name: body.name \r\n                }\r\n            ));\r\n        } else {\r\n            dispatch( checkingFinish() );\r\n        }\r\n    };\r\n};\r\n\r\nconst checkingFinish = () => {\r\n    return {\r\n        type: types.authCheckingFinish,\r\n    };\r\n};\r\n\r\nexport const startLogout = () => {\r\n    return async ( dispatch ) => {\r\n        localStorage.clear();\r\n        dispatch( logout() );\r\n    };\r\n};\r\n\r\nconst logout = () => {\r\n    return {\r\n        type: types.authLogout,\r\n    };\r\n};","import React from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport { startRegister, startLogin } from \"../../actions/authActions\";\r\nimport './auth.css';\r\n\r\nexport const Login = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const initialLoginForm = {\r\n        loginEmail: 'david.geovanny@hotmail.com',\r\n        loginPassword: '123456',\r\n    };\r\n\r\n    const initialRegisterForm = {\r\n        registerEmail: 'david.geovanny@hotmail.com',\r\n        registerPassword: '123456',\r\n        registerPasswordRepeat: '123456',\r\n        registerName: 'David Geovanny',\r\n    };\r\n\r\n    const [ formLoginValues, handleLoginInputChange ] = useForm( initialLoginForm );\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm( initialRegisterForm );\r\n\r\n    const { loginEmail, loginPassword } = formLoginValues;\r\n    const { registerName, registerEmail, registerPassword, registerPasswordRepeat } = formRegisterValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch( startLogin( loginEmail, loginPassword ) );\r\n    };\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( registerPassword !== registerPasswordRepeat ) {\r\n            return Swal.fire({\r\n                title: 'Error',\r\n                text: 'Las contraseñas deben de ser iguales',\r\n                icon: 'error'\r\n            });\r\n        }\r\n\r\n        dispatch( startRegister( registerName, registerEmail, registerPassword ) );\r\n    };\r\n\r\n\treturn (\r\n        <div className=\"container login-container login-body\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                autoComplete=\"off\"\r\n                                name=\"loginEmail\"\r\n                                value={ loginEmail }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"loginPassword\"\r\n                                value={ loginPassword }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"registerName\"\r\n                                value={ registerName }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"registerEmail\"\r\n                                value={ registerEmail }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"registerPassword\"\r\n                                value={ registerPassword }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"registerPasswordRepeat\"\r\n                                value={ registerPasswordRepeat }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Loading = ( {\r\n\tvariant,\r\n\ttype,\r\n\tsize \r\n} ) => {\r\n\r\n\tlet spinnerVariant;\r\n\tlet spinnerType;\r\n\r\n\tswitch ( variant ) {\r\n\t\tcase 'primary':\r\n\t\t\tspinnerVariant = 'text-primary';\r\n\t\t\tbreak;\r\n\t\tcase 'success':\r\n\t\t\tspinnerVariant = 'text-success';\r\n\t\t\tbreak;\r\n\t\tcase 'warning':\r\n\t\t\tspinnerVariant = 'text-warning';\r\n\t\t\tbreak;\r\n\t\tcase 'info':\r\n\t\t\tspinnerVariant = 'text-info';\r\n\t\t\tbreak;\r\n\t\tcase 'danger':\r\n\t\t\tspinnerVariant = 'text-danger';\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\tspinnerVariant = 'text-primary';\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\tswitch ( type ) {\r\n\t\tcase 'border':\r\n\t\t\tspinnerType = 'spinner-border';\r\n\t\t\tbreak;\r\n\t\tcase 'grow':\r\n\t\t\tspinnerType = 'spinner-grow';\r\n\t\t\tbreak;\r\n\t\r\n\t\tdefault:\r\n\t\t\tspinnerType = 'spinner-border';\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={`${ spinnerType } ${ spinnerVariant } big`} role=\"status\">\r\n\t\t\t<span className=\"sr-only\">Loading...</span>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n\tNavbar,\r\n\tNav,\r\n\tNavDropdown,\r\n\tButton,\r\n} from \"react-bootstrap\";\r\nimport { startLogout } from \"../../../actions/authActions\";\r\n\r\nexport const NavBar = () => {\r\n\tconst dispatch = useDispatch();   \r\n\r\n\tconst handleLogout = () => {\r\n        dispatch( startLogout() );\r\n\t};\r\n\t\r\n\treturn (\r\n\t\t<Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\" sticky=\"top\">\r\n\t\t\t<Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\r\n\t\t\t<Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n\t\t\t<Navbar.Collapse id=\"basic-navbar-nav\">\r\n\t\t\t\t<Nav className=\"mr-auto\">\r\n\t\t\t\t\t<Nav.Link href=\"#home\">Home</Nav.Link>\r\n\t\t\t\t\t<Nav.Link href=\"#link\">Link</Nav.Link>\r\n\t\t\t\t\t<NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\r\n\t\t\t\t\t\t<NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n\t\t\t\t\t\t<NavDropdown.Item href=\"#action/3.2\">\r\n\t\t\t\t\t\t\tAnother action\r\n\t\t\t\t\t\t</NavDropdown.Item>\r\n\t\t\t\t\t\t<NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n\t\t\t\t\t\t<NavDropdown.Divider />\r\n\t\t\t\t\t\t<NavDropdown.Item href=\"#action/3.4\">\r\n\t\t\t\t\t\t\tSeparated link\r\n\t\t\t\t\t\t</NavDropdown.Item>\r\n\t\t\t\t\t</NavDropdown>\r\n\t\t\t\t</Nav>\r\n\r\n\t\t\t\t<Button \r\n\t\t\t\t\tvariant=\"danger\"\r\n\t\t\t\t\tonClick={ handleLogout }\r\n\t\t\t\t>\r\n\t\t\t\t\t<i className=\"fas fa-sign-out-alt\"></i>{' '}\r\n\t\t\t\t\tSalir\r\n\t\t\t\t</Button>\r\n\t\t\t</Navbar.Collapse>\r\n\t\t</Navbar>\r\n\t);\r\n};\r\n","import React from \"react\";\r\n\r\nexport const NoProject = () => {\r\n\treturn (\r\n\t\t<div className=\"row justify-content-md-center\">\r\n\t\t\t<div className=\"col-10\">\r\n\t\t\t\t<div className=\"jumbotron text-center blue-grey lighten-5\">\r\n\t\t\t\t\t<h2 className=\"card-title h2\">No hay proyectos disponibles para mostrar</h2>\r\n\r\n\t\t\t\t\t<p className=\"indigo-text my-4 font-weight-bold\">\r\n\t\t\t\t\t\tTodo esfuerzo empieza de algo pequeño.\r\n\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t¿Por qué no empezar a crear un nuevo proyecto?\r\n\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t<div className=\"row d-flex justify-content-center\">\r\n\t\t\t\t\t\t<div className=\"col-xl-7 pb-2\">\r\n\t\t\t\t\t\t\t<p className=\"card-text\">\r\n\t\t\t\t\t\t\t\tLorem ipsum dolor sit amet, consectetur adipisicing elit. Fuga\r\n\t\t\t\t\t\t\t\taliquid dolorem ea distinctio exercitationem delectus qui, quas\r\n\t\t\t\t\t\t\t\teum architecto, amet quasi accusantium, fugit consequatur\r\n\t\t\t\t\t\t\t\tducimus obcaecati numquam molestias hic itaque accusantium\r\n\t\t\t\t\t\t\t\tdoloremque laudantium, totam rem aperiam.\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<hr className=\"my-4 pb-2\" />\r\n\r\n\t\t\t\t\t<button className=\"btn btn-lg btn-indigo btn-rounded\">\r\n\t\t\t\t\t\tCrear proyecto ahora <i className=\"fas fa-tasks\"></i>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const ProjectCard = ({ id, area, title, description }) => {\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName=\"card card-image\"\r\n\t\t\tstyle={{\r\n\t\t\t\tbackgroundImage:\r\n\t\t\t\t\t\"url(https://assets.entrepreneur.com/content/3x2/2000/20191112054904-FotoJet32.jpeg)\",\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<div className=\"justify-content-center d-flex rgba-black-strong py-5 px-4 animate__animated animate__fadeIn animate__faster\">\r\n\t\t\t\t<div className=\"text-white text-center\">\r\n\t\t\t\t\t<h5 className=\"pink-text\">\r\n\t\t\t\t\t\t<i className=\"fas fa-chart-pie\"></i> { area }\r\n\t\t\t\t\t</h5>\r\n\t\t\t\t\t<h3 className=\"card-title pt-2\">\r\n\t\t\t\t\t\t<strong>{ title }</strong>\r\n\t\t\t\t\t</h3>\r\n\t\t\t\t\t<p className=\"card-description\">{ description }</p>\r\n\t\t\t\t\t<Link \r\n\t\t\t\t\t\tclassName=\"btn btn-pink\"\r\n\t\t\t\t\t\tto={`./projects/${ id }/activities`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<i className=\"far fa-clone left\"></i> Ver proyecto\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","export const arrayObjectsSort = (key, order = \"asc\") => {\r\n\treturn function innerSort(a, b) {\r\n\t\tif (!a.hasOwnProperty(key) || !b.hasOwnProperty(key)) {\r\n\t\t\t// property doesn't exist on either object\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n        const varA = typeof a[key] === \"string\" \r\n            ? a[key].toUpperCase() \r\n            : a[key];\r\n\r\n        const varB = typeof b[key] === \"string\" \r\n            ? b[key].toUpperCase() \r\n            : b[key];\r\n\r\n\t\tlet comparison = 0;\r\n\r\n\t\tif (varA > varB) {\r\n\t\t\tcomparison = 1;\r\n\t\t} else if (varA < varB) {\r\n\t\t\tcomparison = -1;\r\n        }\r\n        \r\n        return order === \"desc\" \r\n            ? comparison * -1 \r\n            : comparison;\r\n\t};\r\n};\r\n","import { arrayObjectsSort } from \"./sort\";\r\n\r\n/**\r\n * Regresa el objeto del arreglo si es encontrado\r\n * o un null si no lo encuentra\r\n * @param elements: array\r\n * @param id: string\r\n */\r\nexport const findElementById = ( elements, id ) => {\r\n    let auxTempElement = elements.find(\r\n        element => element.id === id\r\n    );\r\n\r\n    return auxTempElement ? auxTempElement : null;\r\n};\r\n\r\nexport const filterProjects = ( projects, doneCondition, sortCondition ) => {\r\n    let auxTempProjects = doneCondition \r\n        ? projects\r\n        : projects.filter( project => project.done === doneCondition );\r\n\r\n    auxTempProjects = sortCondition === 0\r\n                ? auxTempProjects.sort( arrayObjectsSort('id') )\r\n                : auxTempProjects.sort( arrayObjectsSort('area') );\r\n\r\n    return auxTempProjects;\r\n};\r\n\r\n/**\r\n * \r\n * Regresa un objeto con las actividades separadas\r\n * dependiendo si están terminadas o no\r\n * @param activities: array\r\n */\r\nexport const filterActivities = ( activities ) => {\r\n    const activitiesCompleted = activities.filter( activity => activity.done === true );\r\n    const activitiesNotCompleted = activities.filter( activity => activity.done === false );\r\n\r\n    return { activitiesCompleted, activitiesNotCompleted };\r\n};","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { ProjectCard } from \"./ProjectCard\";\r\nimport { filterProjects } from \"../../helpers/filter\";\r\n\r\nexport const Projects = () => {\r\n    \r\n    const { \r\n        projects, \r\n        conditionShowProjects, \r\n        showFinishedProjects,\r\n    } = useSelector(state => state.projects);\r\n\r\n    const [shownProjects, setShownProjects] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setShownProjects( \r\n            filterProjects( projects, showFinishedProjects, conditionShowProjects ) \r\n        );\r\n    }, [ projects, showFinishedProjects, conditionShowProjects ]);\r\n\r\n\treturn (\r\n\t\t<div className=\"row justify-content-md-center blue-grey lighten-5 z-depth-1 m-1 animate__animated animate__fadeInUp\">\r\n            <div className=\"col-12\">\r\n                <div className=\"row m-3\">\r\n                    {\r\n                        shownProjects.map( ( project, index ) => (\r\n                            <div \r\n                                className=\"col-lg-4 col-md-6 col-12 mt-2\" \r\n                                key={ project.id }\r\n                            >\r\n                                <ProjectCard\r\n                                    id={ project.id }\r\n                                    area={ project.area }\r\n                                    title={ project.title }\r\n                                    description={ project.description }\r\n                                />\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n            \r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const FloatingButton = ( { \r\n    variant,\r\n    icon,\r\n    onClick,\r\n    aditionalClass = '',\r\n} ) => {\r\n\r\n    let btnVariant;\r\n\r\n    switch ( variant ) {\r\n        case 'primary':\r\n            btnVariant = 'btn-primary';\r\n            break;\r\n        case 'success':\r\n            btnVariant = 'btn-success';\r\n            break;\r\n        case 'warning':\r\n            btnVariant = 'btn-warning';\r\n            break;\r\n        case 'danger':\r\n            btnVariant = 'btn-danger';\r\n            break;\r\n        case 'info':\r\n            btnVariant = 'btn-info';\r\n            break;\r\n        case 'secondary':\r\n            btnVariant = 'btn-secondary';\r\n            break;\r\n        case 'dark':\r\n            btnVariant = 'btn-dark';\r\n            break;\r\n        default:\r\n            btnVariant = 'btn-primary';\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <div className=\"fixed-action-btn\">\r\n            <button \r\n                className={`btn btn-floating ${ btnVariant } ${ aditionalClass }`}\r\n                onClick={ onClick }\r\n            >\r\n                <i className={ icon }></i>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nFloatingButton.propTypes = {\r\n    variant: PropTypes.string,\r\n    icon: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n    aditionalClass: PropTypes.string,\r\n}","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const CustomCheckbox = ( {\r\n    id,\r\n    text,\r\n    checked = false,\r\n    onChange,\r\n} ) => {\r\n\treturn (\r\n\t\t<div className=\"form-check\">\r\n\t\t\t<input\r\n\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\tclassName=\"form-check-input\"\r\n                id={`customCheck-${ id }`}\r\n                checked={ checked }\r\n                onChange={ onChange }\r\n\t\t\t/>\r\n\t\t\t<label className=\"form-check-label\" htmlFor={`customCheck-${ id }`}>\r\n\t\t\t\t{ text }\r\n\t\t\t</label>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nCustomCheckbox.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n    checked: PropTypes.bool,\r\n    onChange: PropTypes.func.isRequired,\r\n};","import React from 'react';\r\nimport { Dropdown } from \"react-bootstrap\";\r\n\r\nexport const DropdownItem = ( {\r\n    text,\r\n    index,\r\n} ) => {\r\n    return (\r\n        <Dropdown.Item href={ `#/action-${ index }` }>{ text }</Dropdown.Item>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport PropTypes from 'prop-types';\r\nimport { DropdownItem } from './DropdownItem';\r\n\r\nexport const DropdownItems = ( {\r\n    variant,\r\n    items,\r\n} ) => {\r\n    let dropdownVariant;\r\n\r\n    switch ( variant ) {\r\n        case 'primary':\r\n            dropdownVariant = 'dropdown-primary';\r\n            break;\r\n        case 'success':\r\n            dropdownVariant = 'dropdown-success';\r\n            break;\r\n        case 'warning':\r\n            dropdownVariant = 'dropdown-warning';\r\n            break;\r\n        case 'danger':\r\n            dropdownVariant = 'dropdown-danger';\r\n            break;\r\n        case 'info':\r\n            dropdownVariant = 'dropdown-info';\r\n            break;\r\n        case 'secondary':\r\n            dropdownVariant = 'dropdown-secondary';\r\n            break;\r\n        case 'dark':\r\n            dropdownVariant = 'dropdown-dark';\r\n            break;\r\n        default:\r\n            dropdownVariant = 'dropdown-primary';\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <Dropdown.Menu className={ `${ dropdownVariant }` }>\r\n            {\r\n                items.map( ( item, index ) => (\r\n                    <DropdownItem\r\n                        key={ index }\r\n                        index={ index }\r\n                        text={ item }\r\n                    />\r\n                ))\r\n            }\r\n        </Dropdown.Menu>\r\n    )\r\n}\r\n\r\nDropdownItems.propTypes = {\r\n    items: PropTypes.array.isRequired,\r\n}","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { Dropdown } from \"react-bootstrap\";\r\nimport { DropdownItems } from \"./DropdownItems\";\r\n\r\nexport const CustomDropdown = ( {\r\n    variant,\r\n    textLabel = 'Seleccione una opción',\r\n    items,\r\n    onSelect,\r\n    textBeforeDropdown = '',\r\n} ) => {\r\n    let dropdownVariant;\r\n\r\n    switch ( variant ) {\r\n        case 'primary':\r\n            dropdownVariant = 'primary';\r\n            break;\r\n        case 'success':\r\n            dropdownVariant = 'success';\r\n            break;\r\n        case 'warning':\r\n            dropdownVariant = 'warning';\r\n            break;\r\n        case 'danger':\r\n            dropdownVariant = 'danger';\r\n            break;\r\n        case 'info':\r\n            dropdownVariant = 'info';\r\n            break;\r\n        case 'secondary':\r\n            dropdownVariant = 'secondary';\r\n            break;\r\n        case 'dark':\r\n            dropdownVariant = 'dark';\r\n            break;\r\n        default:\r\n            dropdownVariant = 'primary';\r\n            break;\r\n    }\r\n\r\n\treturn (\r\n\t\t<Dropdown onSelect={ onSelect } style={{zIndex: '999'}}>\r\n            {\r\n                ( !!textBeforeDropdown ) &&\r\n                    <span className=\"text-black-50\">\r\n                        <em>{ textBeforeDropdown }</em> |{\" \"}\r\n                    </span>\r\n            }\r\n            \r\n\t\t\t<Dropdown.Toggle variant={ dropdownVariant }>\r\n\t\t\t\t{ textLabel }\r\n\t\t\t</Dropdown.Toggle>\r\n\r\n            <DropdownItems\r\n                items={ items }\r\n                variant={ dropdownVariant }\r\n            />\r\n\t\t</Dropdown>\r\n\t);\r\n};\r\n\r\nCustomDropdown.propTypes = {\r\n    items: PropTypes.array.isRequired,\r\n    variant: PropTypes.string,\r\n    textLabel: PropTypes.string.isRequired,\r\n    onSelect: PropTypes.func.isRequired,\r\n    textBeforeDropdown: PropTypes.string,\r\n}","export const optionProjects = [\r\n    'Por defecto',\r\n    'Por área',\r\n    // 'Por actividad reciente',\r\n];","import Swal from \"sweetalert2\";\r\nimport { types } from \"../types/types\";\r\nimport { fetchWithToken } from \"../helpers/fetch\";\r\n\r\nexport const startProjectLoad = () => {\r\n    return async( dispatch ) => {\r\n        try {\r\n            Swal.fire({\r\n                title: 'Cargando proyectos',\r\n                text: 'Por favor espere...',\r\n                allowOutsideClick: false,\r\n                onBeforeOpen: () => {\r\n                    Swal.showLoading();\r\n                },\r\n            });\r\n\r\n            const resp = await fetchWithToken('projects');\r\n            const body = await resp.json();\r\n\r\n            if( !body.ok ) {\r\n                return Swal.fire({\r\n                    title: 'Error',\r\n                    text: body.msg || 'Ha ocurrido un error inesperado',\r\n                    icon: 'error',\r\n                });\r\n            }\r\n            \r\n            Swal.close();\r\n            dispatch( projectLoaded( body.projects ) );\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n};\r\n\r\nconst projectLoaded = ( projects ) => {\r\n    return {\r\n        type: types.projectLoadedProjects,\r\n        payload: {\r\n            projects,\r\n        }\r\n    }\r\n};\r\n\r\nexport const setActiveProject = ( idProject ) => {\r\n    return {\r\n        type: types.projectSetActiveProject,\r\n        payload: {\r\n            id: idProject\r\n        }\r\n    };\r\n};\r\n\r\nexport const setShowFinishedProjects = () => {\r\n    return {\r\n        type: types.projectShowFinishedProjects,\r\n    };\r\n};\r\n\r\nexport const setConditionShowProjects = ( index ) => {\r\n    return {\r\n        type: types.projectConditionShowProjects,\r\n        payload: {\r\n            index\r\n        }\r\n    };\r\n};\r\n\r\nexport const clearActiveProject = () => {\r\n    return {\r\n        type: types.projectClearActiveProject,\r\n    };\r\n};\r\n\r\nexport const startAddProject = ( title, area, description, history ) => {\r\n    return async ( dispatch ) => {        \r\n        try {\r\n            Swal.fire({\r\n                title: 'Agregando proyecto',\r\n                text: 'Por favor espere...',\r\n                allowOutsideClick: false,\r\n                onBeforeOpen: () => {\r\n                    Swal.showLoading();\r\n                },\r\n            });\r\n\r\n            const projectObject = { title, area, description };\r\n\r\n            const resp = await fetchWithToken('projects', projectObject, 'POST');\r\n            const body = await resp.json();\r\n\r\n            if( !body.ok ) {\r\n                return Swal.fire({\r\n                    title: 'Error',\r\n                    text: body.msg || 'Ha ocurrido un error inesperado',\r\n                    icon: 'error',\r\n                });\r\n            }\r\n\r\n            Swal.close();\r\n            dispatch( addedProject( body.project ) );\r\n            history.push('/');\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n};\r\n\r\nconst addedProject = ( project ) => {\r\n    return {\r\n        type: types.projectAddedProject,\r\n        payload: {\r\n            project\r\n        }\r\n    }\r\n};\r\n\r\nexport const startUpdateProject = ( title, area, description, history ) => {\r\n    return async ( dispatch, getState ) => {        \r\n        try {\r\n\r\n            const activeProject = getState().projects.activeProject;\r\n\r\n            Swal.fire({\r\n                title: 'Agregando proyecto',\r\n                text: 'Por favor espere...',\r\n                allowOutsideClick: false,\r\n                onBeforeOpen: () => {\r\n                    Swal.showLoading();\r\n                },\r\n            });\r\n\r\n            const projectObject = { title, area, description };\r\n\r\n            const resp = await fetchWithToken(`projects/${ activeProject.id }`, projectObject, 'PUT');\r\n            const body = await resp.json();\r\n\r\n            if( !body.ok ) {\r\n                return Swal.fire({\r\n                    title: 'Error',\r\n                    text: body.msg || 'Ha ocurrido un error inesperado',\r\n                    icon: 'error',\r\n                });\r\n            }\r\n\r\n            Swal.close();\r\n            dispatch( updatedProject( body.project ) );\r\n            history.push(`/projects/${ activeProject.id }/activities`);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n};\r\n\r\nconst updatedProject = ( project ) => {\r\n    return {\r\n        type: types.projectUpdatedProject,\r\n        payload: {\r\n            project\r\n        }\r\n    }\r\n};\r\n\r\nexport const doneProject = ( id, done ) => {\r\n    return {\r\n        type: types.projectDoneProject,\r\n        payload: {\r\n            id,\r\n            done\r\n        }\r\n    }\r\n};","import React, { Fragment } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { NoProject } from \"./NoProject\";\r\nimport { Projects } from \"./Projects\";\r\n\r\nimport { FloatingButton } from \"../ui/FloatingButton/FloatingButton\";\r\nimport { CustomCheckbox } from \"../ui/Checkbox/CustomCheckbox\";\r\nimport { CustomDropdown } from \"../ui/Dropdown/CustomDropdown\";\r\n// import { CustomModal } from \"../ui/Modal/CustomModal\";\r\n\r\nimport { optionProjects } from \"../../data/optionProjects\";\r\n\r\nimport { setShowFinishedProjects, setConditionShowProjects } from \"../../actions/projectActions\";\r\n\r\nexport const ProjectScreen = ({ history }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { \r\n        projects,\r\n        showFinishedProjects,\r\n        conditionShowProjects\r\n    } = useSelector( state => state.projects );\r\n\r\n    const handleShowProjects = () => {\r\n        dispatch( setShowFinishedProjects() );\r\n    };\r\n\r\n    const handleDropdownProjects = (e) => {\r\n        const optionSelected = parseInt( e.split('-')[1] ) || 0;\r\n        dispatch( setConditionShowProjects( optionSelected ) );\r\n    };\r\n\r\n    const onClickAddProject = () => {\r\n        history.push('projects/form');\r\n    };\r\n    \r\n\treturn (\r\n\t\t<div className=\"container-fluid pb-3 pt-3 pl-3 pr-3 animate__animated animate__fadeIn animate__faster\">\r\n            {\r\n                ( projects.length > 0 ) \r\n                    ?\r\n                        <Fragment>\r\n                            <div className='d-flex pb-3 justify-content-between'>\r\n                                <CustomCheckbox \r\n                                    id='ended-projects'\r\n                                    checked={ showFinishedProjects }\r\n                                    text='Mostrar proyectos terminados'\r\n                                    onChange={ handleShowProjects }\r\n                                />\r\n\r\n                                <CustomDropdown\r\n                                    textLabel='Mostrar proyectos...'\r\n                                    items={ optionProjects }\r\n                                    onSelect={ handleDropdownProjects }\r\n                                    textBeforeDropdown={ optionProjects[ conditionShowProjects ] }\r\n                                    variant='primary'\r\n                                />\r\n                            </div>\r\n\r\n                            <Projects />\r\n                        </Fragment>\r\n                    :\r\n                        <NoProject />\r\n            }\r\n\r\n            <FloatingButton\r\n                variant='primary'\r\n                icon='fas fa-plus'\r\n                onClick={ onClickAddProject }\r\n            />\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const NoProjectFound = () => {\r\n    return (\r\n        <div className=\"container-fluid pb-3 pt-3 pl-3 pr-3\">\r\n            <div className=\"col-12 text-center mt-5\">\r\n                <h1>No existe el proyecto seleccionado</h1>\r\n                <Link \r\n                    className=\"btn btn-indigo\"\r\n                    to=\"/\"\r\n                    style={{zIndex: '999'}}\r\n                >\r\n                    <i className=\"fas fa-arrow-left\"></i>{' '}Regresar\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\r\nimport { NoProjectFound } from \"./NoProjectFound\";\r\nimport {\r\n\tsetActiveProject,\r\n\tclearActiveProject,\r\n    startAddProject,\r\n    startUpdateProject,\r\n} from \"../../actions/projectActions\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\n\r\nexport const ProjectForm = ({ history }) => {\r\n\r\n\tconst dispatch = useDispatch();\r\n    \r\n    const { error, activeProject, loading } = useSelector((state) => state.projects);\r\n\tconst { title, area, description } = activeProject || {};\r\n\r\n\tconst path = useLocation().pathname.split(\"/\");\r\n    const idProject = path[path.length - 1] !== \"form\" && path[path.length - 1];\r\n\r\n    const initialState = {\r\n        formTitle: '',\r\n        formArea: '',\r\n        formDescription: '',\r\n    };\r\n    \r\n    const [ formValues, handleInputChange, reset ] = useForm( initialState );\r\n\tconst { formTitle, formArea, formDescription } = formValues;\r\n\r\n\tuseEffect(() => {\r\n\t\tif ( idProject && !loading ) {\r\n\t\t\tdispatch( setActiveProject( idProject ) );\r\n\t\t} else if( !idProject && !loading ) {\r\n\t\t\tdispatch( clearActiveProject() );\r\n\t\t}\r\n\t}, [dispatch, idProject, loading]);\r\n\t\r\n\tuseEffect(() => {\r\n\t\tif( !!activeProject ) {\r\n\t\t\tif( JSON.stringify(formValues) === JSON.stringify(initialState) ) {\r\n\t\t\t\treset({ \r\n\t\t\t\t\tformTitle: title, \r\n\t\t\t\t\tformArea: area, \r\n\t\t\t\t\tformDescription: description \r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}, [activeProject, area, title, description, reset, formValues, initialState]);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n\t\t\tdispatch( clearActiveProject() );\r\n\t\t};\r\n\t}, [dispatch]);\r\n\r\n\tif (error) {\r\n\t\treturn <NoProjectFound />;\r\n\t}\r\n\t\r\n\tconst handleReturn = () => {\r\n\t\tif( history.length <= 2 || !activeProject ) {\r\n\t\t\thistory.push('/');\r\n\t\t} else {\r\n\t\t\thistory.goBack();\r\n\t\t}\r\n\t};\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( !!activeProject ) {\r\n            dispatch( startUpdateProject( formTitle, formArea, formDescription, history ) );\r\n        } else {\r\n            dispatch( startAddProject( formTitle, formArea, formDescription, history ) );\r\n        }\r\n    };\r\n\r\n\treturn (\r\n\t\t<div className=\"container-fluid pb-3 pt-3 pl-3 pr-3 animate__animated animate__fadeIn animate__faster\">\r\n\t\t\t<div className=\"row justify-content-end mr-1 mt-2 mb-2\">\r\n\t\t\t\t<button \r\n\t\t\t\t\tonClick={ handleReturn }\r\n\t\t\t\t\tclassName=\"btn btn-indigo\" \r\n\t\t\t\t\tstyle={{ zIndex: \"999\" }}\r\n\t\t\t\t>\r\n\t\t\t\t\t<i className=\"fas fa-arrow-left\"></i> Regresar\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"row blue-grey lighten-5 z-depth-1 m-1\">\r\n\t\t\t\t<div className=\"col\">\r\n\t\t\t\t\t<div className=\"row m-3\">\r\n\t\t\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t\t\t<Form onSubmit={ handleSubmit }>\r\n\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Nombre del proyecto</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n                                            placeholder=\"Ingrese el nombre del proyecto\"\r\n                                            name='formTitle'\r\n                                            value={ formTitle }\r\n                                            onChange={ handleInputChange }\r\n                                            autoComplete='off'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Text className=\"text-muted\">\r\n\t\t\t\t\t\t\t\t\t\t\t<em>\r\n\t\t\t\t\t\t\t\t\t\t\t\tRecomendamos utilizar un nombre corto y fácil de\r\n\t\t\t\t\t\t\t\t\t\t\t\trecordar\r\n\t\t\t\t\t\t\t\t\t\t\t</em>\r\n\t\t\t\t\t\t\t\t\t\t</Form.Text>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Área designada para el proyecto</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n                                            placeholder=\"Ingrese el área del proyecto\"\r\n                                            name='formArea'\r\n                                            value={ formArea }\r\n                                            onChange={ handleInputChange }\r\n                                            autoComplete='off'\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t\t\t<Form.Group controlId=\"formBasicPassword\" className=\"mt-1\">\r\n\t\t\t\t\t\t\t\t\t<Form.Label>Descripción del proyecto</Form.Label>\r\n\t\t\t\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\t\t\t\tas=\"textarea\"\r\n\t\t\t\t\t\t\t\t\t\trows=\"4\"\r\n\t\t\t\t\t\t\t\t\t\tplaceholder=\"El proyecto consiste en...\"\r\n\t\t\t\t\t\t\t\t\t\tname=\"formDescription\"\r\n\t\t\t\t\t\t\t\t\t\tvalue={ formDescription }\r\n\t\t\t\t\t\t\t\t\t\tonChange={ handleInputChange }\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"no-resizable square scrollbar-dusty-grass square thin\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Form.Group>\r\n\r\n                                <Button \r\n                                    variant={ !!activeProject ? 'outline-success' : 'outline-primary' } \r\n                                    type=\"submit\"\r\n                                    block={ true }\r\n                                >\r\n\t\t\t\t\t\t\t\t\t{\r\n                                        ( !!activeProject )\r\n                                            ? 'Actualizar'\r\n                                            : 'Agregar'\r\n                                    }\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nexport const hideModal = () => {\r\n    return {\r\n        type: types.uiHideModal,\r\n    };\r\n};\r\n\r\nexport const showModal = () => {\r\n    return {\r\n        type: types.uiShowModal,\r\n    };\r\n};\r\n\r\nexport const hideSideModal = () => {\r\n    return {\r\n        type: types.uiHideSideModal,\r\n    };\r\n};\r\n\r\nexport const showSideModal = () => {\r\n    return {\r\n        type: types.uiShowSideModal,\r\n    };\r\n};\r\n\r\nexport const hideConfirmModal = () => {\r\n    return {\r\n        type: types.uiHideConfirmModal,\r\n    };\r\n};\r\n\r\nexport const showConfirmModal = () => {\r\n    return {\r\n        type: types.uiShowConfirmModal,\r\n    };\r\n};\r\n\r\nexport const setModalIsForm = () => {\r\n    return {\r\n        type: types.uiIsFormModal,\r\n    };\r\n};\r\n\r\nexport const setModalIsInfo = () => {\r\n    return {\r\n        type: types.uiIsInfoModal,\r\n    };\r\n};","import Swal from \"sweetalert2\";\r\nimport { types } from \"../types/types\";\r\n\r\nimport { setActiveProject, doneProject } from \"./projectActions\";\r\nimport { hideSideModal, hideConfirmModal, hideModal } from \"./uiActions\";\r\nimport { fetchWithToken } from \"../helpers/fetch\";\r\n\r\nexport const startLoadActivities = ( idProject ) => {\r\n    return async ( dispatch, getState ) => {\r\n        /** set active project */\r\n        dispatch( setActiveProject( idProject ) );\r\n        const activeProject = getState().projects.activeProject;\r\n\r\n        try {\r\n            if( !activeProject ) {\r\n                dispatch( loadingFinish() );\r\n                return Swal.fire({\r\n                    title: 'Error',\r\n                    text: 'No se ha encontrado el proyecto especificado',\r\n                    icon: 'error',\r\n                });\r\n            }\r\n            \r\n            Swal.fire({\r\n                title: 'Cargando actividades',\r\n                text: 'Por favor espere...',\r\n                allowOutsideClick: false,\r\n                onBeforeOpen: () => {\r\n                    Swal.showLoading();\r\n                },\r\n            });\r\n\r\n            const resp = await fetchWithToken(`activities/${ idProject }`);\r\n            const body = await resp.json();\r\n\r\n            if( !body.ok ) {\r\n                dispatch( loadedActitivities( [] ) );\r\n                return Swal.fire({\r\n                    title: 'Error',\r\n                    text: body.msg || 'Ha ocurrido un error inesperado',\r\n                    icon: 'error',\r\n                });\r\n            }\r\n            \r\n            Swal.close();\r\n            dispatch( loadedActitivities( body.activities ) );\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n};\r\n\r\nconst loadedActitivities = ( activities ) => {\r\n    return {\r\n        type: types.activityLoadedActivities,\r\n        payload: {\r\n            activities,\r\n        },\r\n    };\r\n};\r\n\r\nconst loadingFinish = () => {\r\n    return {\r\n        type: types.activityLoadingFinish,\r\n    };\r\n};\r\n\r\nexport const setActiveActivity = ( idActivity ) => {\r\n    return {\r\n        type: types.activitySetActiveActivity,\r\n        payload: {\r\n            id: idActivity\r\n        }\r\n    };\r\n};\r\n\r\nexport const startAddNote = ( textNote ) => {\r\n    return async ( dispatch, getState ) => {        \r\n        try {\r\n\r\n            const { id } = getState().activities.activeActivity;\r\n            const { activeProject } = getState().projects;\r\n\r\n            Swal.fire({\r\n                title: 'Agregando nota',\r\n                text: 'Por favor espere...',\r\n                allowOutsideClick: false,\r\n                onBeforeOpen: () => {\r\n                    Swal.showLoading();\r\n                },\r\n            });\r\n\r\n            const noteObject = { text: textNote, activity: id };\r\n\r\n            const resp = await fetchWithToken('notes', noteObject, 'POST');\r\n            const body = await resp.json();\r\n\r\n            if( !body.ok ) {\r\n                const { errors } = body;\r\n                let msg = '';\r\n                for (const key in errors) {\r\n                    if (errors.hasOwnProperty(key)) {\r\n                        const error = errors[key];\r\n                        msg += `<li>${ error.msg }</li>`;\r\n                    }\r\n                }\r\n\r\n                return Swal.fire({\r\n                    title: 'Error',\r\n                    html: `<ul>${ msg }</ul>`,\r\n                    icon: 'error',\r\n                });\r\n            }\r\n\r\n            Swal.close();\r\n            dispatch( hideSideModal() );\r\n            dispatch( addedNote( body.note ) );\r\n            dispatch( doneActivity( id, body.activityDone ) );\r\n            dispatch( doneProject( activeProject.id, body.projectDone ) );\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n};\r\n\r\nconst addedNote = ( note ) => {\r\n    return {\r\n        type: types.activityAddedNote,\r\n        payload: {\r\n            note\r\n        }\r\n    }\r\n};\r\n\r\nexport const startCheckNote = ( id, done ) => {\r\n    return async ( dispatch, getState ) => {        \r\n        try {\r\n\r\n            const { activeActivity } = getState().activities;\r\n            const { activeProject } = getState().projects;\r\n\r\n            Swal.fire({\r\n                title: 'Actualizando nota',\r\n                text: 'Por favor espere...',\r\n                allowOutsideClick: false,\r\n                onBeforeOpen: () => {\r\n                    Swal.showLoading();\r\n                },\r\n            });\r\n\r\n            const noteObject = { done };\r\n\r\n            const resp = await fetchWithToken(`notes/${ id }`, noteObject, 'PUT');\r\n            const body = await resp.json();\r\n\r\n            if( !body.ok ) {\r\n                const { errors } = body;\r\n                let msg = '';\r\n                for (const key in errors) {\r\n                    if (errors.hasOwnProperty(key)) {\r\n                        const error = errors[key];\r\n                        msg += `<li>${ error.msg }</li>`;\r\n                    }\r\n                }\r\n\r\n                return Swal.fire({\r\n                    title: 'Error',\r\n                    html: `<ul>${ msg }</ul>`,\r\n                    icon: 'error',\r\n                });\r\n            }\r\n\r\n            Swal.close();\r\n\r\n            dispatch( checkedNote( body.note.id, body.note.done ) );\r\n            dispatch( doneActivity( activeActivity.id, body.activityDone ) );\r\n            dispatch( doneProject( activeProject.id, body.projectDone ) );\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n}\r\n\r\nconst checkedNote = ( id, done ) => {\r\n    return {\r\n        type: types.activityCheckedNote,\r\n        payload: {\r\n            id,\r\n            done\r\n        }\r\n    }\r\n};\r\n\r\nconst doneActivity = ( id, done ) => {\r\n    console.log(done);\r\n    return {\r\n        type: types.activityDoneActivity,\r\n        payload: {\r\n            id,\r\n            done\r\n        }\r\n    }\r\n};\r\n\r\nexport const startAddMessage = ( textMessage ) => {\r\n    return async ( dispatch, getState ) => {        \r\n        try {\r\n\r\n            const { name } = getState().auth;\r\n            const { id } = getState().activities.activeActivity;\r\n\r\n            Swal.fire({\r\n                title: 'Agregando comentario',\r\n                text: 'Por favor espere...',\r\n                allowOutsideClick: false,\r\n                onBeforeOpen: () => {\r\n                    Swal.showLoading();\r\n                },\r\n            });\r\n\r\n            const messageObject = { text: textMessage, activity: id };\r\n\r\n            const resp = await fetchWithToken('messages', messageObject, 'POST');\r\n            const body = await resp.json();\r\n\r\n            if( !body.ok ) {\r\n                const { errors } = body;\r\n                let msg = '';\r\n                for (const key in errors) {\r\n                    if (errors.hasOwnProperty(key)) {\r\n                        const error = errors[key];\r\n                        msg += `<li>${ error.msg }</li>`;\r\n                    }\r\n                }\r\n\r\n                return Swal.fire({\r\n                    title: 'Error',\r\n                    html: `<ul>${ msg }</ul>`,\r\n                    icon: 'error',\r\n                });\r\n            }\r\n\r\n            body.message.user = {\r\n                ...body.message.user,\r\n                name\r\n            }\r\n\r\n            Swal.close();\r\n            dispatch( hideSideModal() );\r\n            dispatch( addedMessage( body.message ) );\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n};\r\n\r\nconst addedMessage = ( message ) => {\r\n    return {\r\n        type: types.activityAddedMessage,\r\n        payload: {\r\n            message\r\n        }\r\n    }\r\n};\r\n\r\nexport const startAddActivity = ( title, description ) => {\r\n    return async ( dispatch, getState ) => {        \r\n        try {\r\n\r\n            const { id } = getState().projects.activeProject;\r\n\r\n            Swal.fire({\r\n                title: 'Agregando actividad',\r\n                text: 'Por favor espere...',\r\n                allowOutsideClick: false,\r\n                onBeforeOpen: () => {\r\n                    Swal.showLoading();\r\n                },\r\n            });\r\n\r\n            const activityObject = { title, description, project: id };\r\n\r\n            const resp = await fetchWithToken('activities', activityObject, 'POST');\r\n            const body = await resp.json();\r\n\r\n            if( !body.ok ) {\r\n                const { errors } = body;\r\n                let msg = '';\r\n                for (const key in errors) {\r\n                    if (errors.hasOwnProperty(key)) {\r\n                        const error = errors[key];\r\n                        msg += `<li>${ error.msg }</li>`;\r\n                    }\r\n                }\r\n\r\n                return Swal.fire({\r\n                    title: 'Error',\r\n                    html: `<ul>${ msg }</ul>`,\r\n                    icon: 'error',\r\n                });\r\n            }\r\n\r\n            body.activity.notes = [];\r\n            body.activity.messages = [];\r\n\r\n            Swal.close();\r\n            dispatch( hideModal() );\r\n            dispatch( addedActivity( body.activity ) );\r\n            dispatch( doneProject( id, false ) );\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n};\r\n\r\nconst addedActivity = ( activity ) => {\r\n    return {\r\n        type: types.activityAddedActivity,\r\n        payload: {\r\n            activity\r\n        }\r\n    }\r\n};\r\n\r\nexport const startUpdateActivity = ( title, description ) => {\r\n    return async ( dispatch, getState ) => {        \r\n        try {\r\n\r\n            const { id } = getState().activities.activeActivity;\r\n\r\n            Swal.fire({\r\n                title: 'Actualizando actividad',\r\n                text: 'Por favor espere...',\r\n                allowOutsideClick: false,\r\n                onBeforeOpen: () => {\r\n                    Swal.showLoading();\r\n                },\r\n            });\r\n\r\n            const activityObject = { title, description };\r\n\r\n            const resp = await fetchWithToken(`activities/${ id }`, activityObject, 'PUT');\r\n            const body = await resp.json();\r\n\r\n            if( !body.ok ) {\r\n                const { errors } = body;\r\n                let msg = '';\r\n                for (const key in errors) {\r\n                    if (errors.hasOwnProperty(key)) {\r\n                        const error = errors[key];\r\n                        msg += `<li>${ error.msg }</li>`;\r\n                    }\r\n                }\r\n\r\n                return Swal.fire({\r\n                    title: 'Error',\r\n                    html: `<ul>${ msg }</ul>`,\r\n                    icon: 'error',\r\n                });\r\n            }\r\n\r\n            Swal.close();\r\n            dispatch( hideModal() );\r\n            dispatch( updatedActivity( body.activity ) );\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n};\r\n\r\nconst updatedActivity = ( activity ) => {\r\n    return {\r\n        type: types.activityUpdatedActivity,\r\n        payload: {\r\n            activity\r\n        }\r\n    }\r\n};\r\n\r\nexport const startDeleteActivity = () => {\r\n    return async ( dispatch, getState ) => {        \r\n        try {\r\n\r\n            const { id } = getState().activities.activeActivity;\r\n            const activeProject = getState().projects.activeProject;\r\n\r\n            Swal.fire({\r\n                title: 'Eliminando actividad',\r\n                text: 'Por favor espere...',\r\n                allowOutsideClick: false,\r\n                onBeforeOpen: () => {\r\n                    Swal.showLoading();\r\n                },\r\n            });\r\n\r\n            const resp = await fetchWithToken(`activities/${ id }`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n\r\n            if( !body.ok ) {\r\n                const { errors } = body;\r\n                let msg = '';\r\n                for (const key in errors) {\r\n                    if (errors.hasOwnProperty(key)) {\r\n                        const error = errors[key];\r\n                        msg += `<li>${ error.msg }</li>`;\r\n                    }\r\n                }\r\n\r\n                return Swal.fire({\r\n                    title: 'Error',\r\n                    html: `<ul>${ msg }</ul>`,\r\n                    icon: 'error',\r\n                });\r\n            }\r\n\r\n            Swal.close();\r\n            dispatch( hideConfirmModal() );\r\n            dispatch( hideModal() );\r\n            dispatch( doneProject( activeProject.id, body.projectDone ) );\r\n            dispatch( deletedActivity( body.activity ) );\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n};\r\n\r\nconst deletedActivity = ( ) => {\r\n    return {\r\n        type: types.activityDeletedActivity,\r\n    }\r\n};\r\n\r\nexport const clearActiveActivity = () => {\r\n    return {\r\n        type: types.activityClearActiveActivity,\r\n    }\r\n};","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { showModal, setModalIsForm, setModalIsInfo } from '../../actions/uiActions';\r\nimport { setActiveActivity } from '../../actions/activityActions';\r\n\r\nimport 'moment/locale/es';\r\n\r\nexport const ActivityCard = ({\r\n\tid,\r\n    title, \r\n\tdescription,\r\n\tnotes = [],\r\n\tdone,\r\n\tdate,\r\n}) => {\r\n    const dispatch = useDispatch();\r\n    \r\n    const variant = done ? 'success' : 'danger';\r\n\r\n    const onShowModalInfo = () => {\r\n\t\tdispatch( setActiveActivity( id ) );\r\n        dispatch( showModal() );\r\n        dispatch( setModalIsInfo() );\r\n    };\r\n\r\n    const onShowModalForm = () => {\r\n\t\tdispatch( setActiveActivity( id ) );\r\n        dispatch( setModalIsForm() );\r\n        dispatch( showModal() );\r\n\t};\r\n\t\r\n\tconst dateActivity = moment( date ).format('LL');\r\n\r\n\tconst countFinishedNotes = () => {\r\n\t\tlet count = 0;\r\n\r\n\t\tfor (let i = 0; i < notes.length; i++) {\r\n\t\t\tif( notes[i].done ) {\r\n\t\t\t\tcount ++\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn count;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Card className={`card border-${variant} mb-3 mt-3  activity-hover animate__animated animate__fadeInUp animate__faster`}>\r\n\t\t\t<div onClick={onShowModalInfo} className=\"cursor-pointer\">\r\n\t\t\t\t<Card.Header className={`bg-transparent border-${variant}`}>\r\n\t\t\t\t\t<div className=\"justify-content-between\">\r\n\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t<div className=\"col-10\">{title}</div>\r\n\t\t\t\t\t\t\t<div className=\"col-2 text-muted\">\r\n\t\t\t\t\t\t\t\t{ countFinishedNotes() } / { notes.length }\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Card.Header>\r\n\t\t\t\t<Card.Body className=\"text-muted\">\r\n\t\t\t\t\t<Card.Text className=\"card-row card-description\">\r\n\t\t\t\t\t\t{description}\r\n\t\t\t\t\t</Card.Text>\r\n\t\t\t\t</Card.Body>\r\n\t\t\t</div>\r\n\r\n\t\t\t<Card.Footer className={`text-muted bg-transparent border-${variant}`}>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-6\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"btn btn-success btn-sm\"\r\n\t\t\t\t\t\t\tonClick={onShowModalForm}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<i className=\"fas fa-edit\"></i>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className=\"col-6 \">\r\n\t\t\t\t\t\t<div className=\"row justify-content-end mr-1\">\r\n\t\t\t\t\t\t\t<span>{ dateActivity }</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Card.Footer>\r\n\t\t</Card>\r\n\t);\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { ActivityCard } from './ActivityCard';\r\nimport { filterActivities } from '../../helpers/filter';\r\n\r\nexport const Activities = () => {\r\n\r\n    const { activities } = useSelector(state => state.activities);\r\n    \r\n    const initState = {\r\n        activitiesCompleted: [],\r\n        activitiesNotCompleted: [],\r\n    };\r\n    \r\n    const [projectActivities, setProjectActivities] = useState( initState );\r\n\r\n    useEffect(() => {\r\n        setProjectActivities(\r\n            filterActivities( activities )\r\n        );\r\n    }, [ activities ]);\r\n\r\n    return (\r\n        <div className=\"row justify-content-around blue-grey lighten-5 z-depth-1 m-1\">\r\n            <div className=\"col-12 mt-3\">\r\n                <h3 className=\"text-center\">Actividades</h3>\r\n            </div>\r\n\r\n            <div className=\"col-lg-6 col-md-6 col-12 border-right\">\r\n                <h4 className=\"text-center mt-3\">Pendiente</h4>\r\n                {\r\n                    projectActivities.activitiesNotCompleted.map( ( activity, index ) => (\r\n                        <div className=\"container-fluid\" key={ index }>\r\n                            <ActivityCard\r\n                                id={ activity.id }\r\n                                title={ activity.title }\r\n                                description={ activity.description }\r\n                                notes={ activity.notes }\r\n                                done={ activity.done }\r\n                                date={ activity.created_at }\r\n                            />\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n\r\n            <div className=\"col-lg-6 col-md-6 col-12 border-left\">\r\n                <h4 className=\"text-center mt-3\">Terminado</h4>\r\n                {\r\n                    projectActivities.activitiesCompleted.map( ( activity, index ) => (\r\n                        <div className=\"container-fluid\" key={ index }>\r\n                            <ActivityCard\r\n                                id={ activity.id }\r\n                                title={ activity.title }\r\n                                description={ activity.description }\r\n                                notes={ activity.notes }\r\n                                done={ activity.done }\r\n                                date={ activity.created_at }\r\n                            />\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { ListGroup } from 'react-bootstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport { startCheckNote } from '../../actions/activityActions';\r\n\r\nexport const Note = ({ id, text, done }) => {\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n    const handleCheked = () => {\r\n\t\tdispatch( startCheckNote( id, !done ) );\r\n    };\r\n\r\n    return (\r\n\t\t<ListGroup.Item>\r\n\t\t\t<div className=\"form-check\">\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\tclassName=\"form-check-input\"\r\n                    id={`checkboxNote-${ id }`}\r\n                    checked={ done }\r\n                    onChange={ handleCheked }\r\n\t\t\t\t/>\r\n\t\t\t\t<label className=\"form-check-label\" htmlFor={`checkboxNote-${ id }`}>\r\n\t\t\t\t\t{ text }\r\n\t\t\t\t</label>\r\n\t\t\t</div>\r\n\t\t</ListGroup.Item>\r\n\t);\r\n}\r\n","import React from 'react'\r\nimport { ListGroup } from 'react-bootstrap'\r\nimport { useSelector } from 'react-redux'\r\nimport { Note } from './Note';\r\n\r\nexport const Notes = () => {\r\n\r\n    const { activeActivity } = useSelector(state => state.activities);\r\n    const { notes } = activeActivity;\r\n\r\n    return (\r\n        <ListGroup variant=\"flush\">\r\n            {\r\n                notes.map( ( note, index ) => (\r\n                    <Note \r\n                        key={ index }\r\n                        id={ note.id }\r\n                        text={ note.text }\r\n                        done={ note.done }\r\n                    />\r\n                ))\r\n            }\r\n        </ListGroup>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NoNotes = () => {\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-12\">\r\n                <h3 className=\"text-center\">\r\n                    No hay notas en esta actividad\r\n                </h3>\r\n                <p className=\"text-center\">\r\n                    Haz clic en el botón <b>+</b> para agregar una nota\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Notes } from './Notes';\r\nimport { NoNotes } from './NoNotes';\r\n\r\nexport const NotesSection = () => {\r\n    \r\n    const { activeActivity } = useSelector(state => state.activities);\r\n    const { notes = [] } = activeActivity || {};\r\n    \r\n    return (\r\n        ( notes.length > 0 )\r\n            ? <Notes />\r\n            : <NoNotes />\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { NotesSection } from \"../notes/NotesSection\";\r\n\r\nexport const ActivityNotes = ({ show }) => {\r\n    return (\r\n        <div className={`tab-pane fadeIn in ${show && \"show active\"}`}>\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <NotesSection />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react'\r\n\r\nexport const NoMessages = () => {\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-12\">\r\n                <h3 className=\"text-center\">\r\n                    Nadie ha dejado un comentario en la actividad\r\n                </h3>\r\n                <p className=\"text-center\">\r\n                    Haz clic en el botón <b><i className=\"fas fa-comment-medical\"></i></b> y sé el primero en dejar un comentario\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react'\r\nimport moment from \"moment\";\r\nimport 'moment/locale/es';\r\n\r\nexport const Message = ({ id, text, user, date }) => {\r\n    const transformDate = moment( date ).startOf('hour').fromNow();\r\n\r\n    const { \r\n        name, \r\n        img = 'https://www.lifestylesolutionsbyworldmark.com/img/global/icon-user.svg'\r\n    } = user;\r\n\r\n    // const onHandleEdit = () => {\r\n    //     console.log('click');\r\n    // }\r\n\r\n    return (\r\n        <li className=\"row ml-3\">\r\n            <div className=\"col-11\">\r\n                <div className=\"messages-container\">\r\n                    <div className=\"d-flex justify-content-md-between\">\r\n                        <div className=\"information d-flex justify-content-start\">\r\n                            <img\r\n                                src={ img }\r\n                                alt=\"avatar\"\r\n                                className=\"avatar rounded-circle d-flex align-self-center mr-2 z-depth-1\"\r\n                            />\r\n                            <div className=\"text-small\">\r\n                                <strong>{ name }</strong>\r\n                                {/* {' '}\r\n                                <div \r\n                                    className=\"badge badge-success text-wrap pointer cursor-pointer\"\r\n                                    onClick={ onHandleEdit }\r\n                                >\r\n                                    Editar\r\n                                </div> */}\r\n                                {/* {' '}\r\n                                <div \r\n                                    className=\"badge badge-danger text-wrap pointer cursor-pointer\"\r\n                                >\r\n                                    Eliminar\r\n                                </div> */}\r\n                                <p className=\"last-message text-muted\">\r\n                                    <em>Publicado { transformDate }</em>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <p className=\"text-justify\">\r\n                        { text }\r\n                    </p>\r\n                </div>\r\n\r\n                <hr/>\r\n            </div>\r\n\t\t</li>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { ListGroup } from 'react-bootstrap'\r\nimport { useSelector } from 'react-redux'\r\nimport { Message } from './Message';\r\n\r\nexport const Messages = () => {\r\n\r\n    const { activeActivity } = useSelector(state => state.activities);\r\n    const { messages } = activeActivity;\r\n\r\n    return (\r\n        <ListGroup variant=\"flush\" className=\"list-unstyled\">\r\n            {\r\n                messages.map( ( message, index ) => (\r\n                    <Message \r\n                        key={ index }\r\n                        id={ message.id }\r\n                        text={ message.text }\r\n                        user={ message.user }\r\n                        date={ message.created_at }\r\n                    />\r\n                ))\r\n            }\r\n        </ListGroup>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NoMessages } from './NoMessages';\r\nimport { Messages } from './Messages';\r\n\r\nexport const MessagesSection = () => {\r\n\r\n    const { activeActivity } = useSelector(state => state.activities);\r\n    const { messages = [] } = activeActivity || {};\r\n    \r\n    return (\r\n        ( messages.length > 0 )\r\n            ? <Messages />\r\n            : <NoMessages />\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { MessagesSection } from \"../messages/MessagesSection\";\r\n\r\nexport const ActivityMessages = ({ show }) => {\r\n\treturn (\r\n\t\t<div className={`tab-pane fadeIn in ${show && \"show active\"}`}>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t<MessagesSection />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { startAddNote } from \"../../actions/activityActions\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\n\r\nexport const NoteForm = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    \r\n    const [formValues, handleInputChange] = useForm({\r\n        textNote: ''\r\n    });\r\n    const { textNote } = formValues;\r\n\r\n    const handleAddNoteSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch( startAddNote( textNote ) );\r\n    }\r\n\r\n\treturn (\r\n\t\t<Form onSubmit={ handleAddNoteSubmit }>\r\n\t\t\t<Form.Group>\r\n                <Form.Control \r\n                    type=\"text\" \r\n                    placeholder=\"Ingrese una nota\" \r\n                    name='textNote'\r\n                    autoComplete='off'\r\n                    value={ textNote }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\t\t\t</Form.Group>\r\n            <Button \r\n                variant=\"outline-primary\" \r\n                type=\"submit\"\r\n                block={ true }\r\n            >\r\n                Agregar\r\n\t\t\t</Button>\r\n\t\t</Form>\r\n\t);\r\n};\r\n","import React from 'react';\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { startAddMessage } from \"../../actions/activityActions\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\n\r\nexport const MessageForm = () => {\r\n    const dispatch = useDispatch();\r\n    \r\n    const [formValues, handleInputChange] = useForm({\r\n        textMessage: ''\r\n    });\r\n\r\n    const { textMessage } = formValues;\r\n\r\n    const handleAddNoteSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch( startAddMessage( textMessage ) );\r\n    }\r\n\r\n\treturn (\r\n\t\t<Form onSubmit={ handleAddNoteSubmit }>\r\n            <Form.Group>\r\n                <Form.Control \r\n                    as=\"textarea\"\r\n                    rows=\"3\" \r\n                    placeholder=\"Ingrese su comentario\" \r\n                    name='textMessage'\r\n                    value={ textMessage }\r\n                    onChange={ handleInputChange }\r\n                    className=\"no-resizable square scrollbar-dusty-grass square thin\"\r\n                />\r\n            </Form.Group>\r\n            <Button \r\n                variant=\"outline-primary\" \r\n                type=\"submit\"\r\n                block={ true }\r\n            >\r\n                Agregar\r\n\t\t\t</Button>\r\n\t\t</Form>\r\n\t);\r\n}\r\n","import React from 'react'\r\n\r\nexport const Navtabs = ( { \r\n    tabNotesOpen, \r\n    setTabNotesOpen,\r\n    variant\r\n} ) => {\r\n\r\n    let colorNavtab;\r\n\r\n    switch ( variant ) {\r\n        case 'primary':\r\n            colorNavtab = 'primary-color';\r\n            break;\r\n        case 'success':\r\n            colorNavtab = 'success-color';\r\n            break;\r\n        case 'warning':\r\n            colorNavtab = 'warning-color';\r\n            break;\r\n        case 'info':\r\n            colorNavtab = 'info-color';\r\n            break;\r\n        case 'danger':\r\n            colorNavtab = 'danger-color';\r\n            break;\r\n    \r\n        default:\r\n            colorNavtab = 'primary-color';\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <ul className={`nav nav-tabs md-tabs nav-justified sticky-top ${ colorNavtab }`}>\r\n            <li\r\n                className={`nav-item nav-link cursor-pointer ${ tabNotesOpen && \"active\" }`}\r\n                onClick={() => setTabNotesOpen( true )}\r\n            >\r\n                <span>\r\n                    <i className=\" fas fa-list pr-2\"></i>Notas\r\n                </span>\r\n            </li>\r\n\r\n            <li\r\n                className={`nav-item nav-link cursor-pointer ${ !tabNotesOpen && \"active\" }`}\r\n                onClick={() => setTabNotesOpen( false )}\r\n            >\r\n                <span>\r\n                    <i className=\" fas fa-comment-alt pr-2\"></i>Mensajes\r\n                </span>\r\n            </li>\r\n        </ul>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Paneltabs = ( { \r\n    children,\r\n} ) => {\r\n    return (\r\n        <div className=\"tab-content pt-5 z-depth-1\">\r\n            { children }\r\n            \r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\n// import { ModalHeader } from './ModalHeader';\r\n// import { ModalBody } from './ModalBody';\r\n\r\nexport const CustomModal = ( { \r\n    variant,\r\n    styleModal,\r\n    position,\r\n    header,\r\n    children,\r\n\r\n\r\n    openModal, \r\n    onHide \r\n} ) => {\r\n\r\n    let modalVariant;\r\n    let modalStyle = '';\r\n    let modalPosition = '';\r\n    let fadePosition;\r\n\r\n    switch ( variant ) {\r\n        case 'primary':\r\n            modalVariant = 'modal-primary';\r\n            break;\r\n            \r\n        case 'success':\r\n            modalVariant = 'modal-success';\r\n            break;\r\n            \r\n        case 'info':\r\n            modalVariant = 'modal-info';\r\n            break;\r\n            \r\n        case 'warning':\r\n            modalVariant = 'modal-warning';\r\n            break;\r\n            \r\n        case 'danger':\r\n            modalVariant = 'modal-danger';\r\n            break;\r\n    \r\n        default:\r\n            modalVariant = 'modal-primary';\r\n            break;\r\n    }\r\n\r\n    switch ( styleModal ) {\r\n        case 'side':\r\n            modalStyle = 'modal-side';\r\n            switch ( position ) {\r\n                case 'top-right':\r\n                    modalPosition = 'modal-top-right';\r\n                    fadePosition = 'right';\r\n                    break;\r\n                case 'top-left':\r\n                    modalPosition = 'modal-top-left';\r\n                    fadePosition = 'left';\r\n                    break;\r\n                case 'bottom-right':\r\n                    modalPosition = 'modal-bottom-right';\r\n                    fadePosition = 'right';\r\n                    break;\r\n                case 'bottom-left':\r\n                    modalPosition = 'modal-bottom-left';\r\n                    fadePosition = 'left';\r\n                    break;\r\n                default:\r\n                    modalPosition = 'modal-bottom-right';\r\n                    fadePosition = 'right';\r\n                    break;\r\n            }\r\n            break;\r\n        \r\n        case 'fluid':\r\n            modalStyle = 'modal-full-height modal-top modal-almost-full-screen';\r\n            fadePosition = 'top';\r\n            break;\r\n    \r\n        default:\r\n            fadePosition = 'top';\r\n            break;\r\n    }\r\n\r\n    return (\r\n\r\n\r\n        <>\r\n            <Modal\r\n                // size=\"xl\"\r\n                show={ openModal }\r\n                onHide={ onHide }\r\n                aria-labelledby=\"example-modal-sizes-title-lg\"\r\n                className={`fade ${ fadePosition }`}\r\n                dialogClassName={`${ modalStyle } ${ modalPosition } modal-notify ${ modalVariant }`}\r\n            >\r\n                { header }\r\n                { children }\r\n            </Modal>\r\n\r\n            {/* <Modal\r\n                // size=\"xl\"\r\n                show={ prueba }\r\n                onHide={ () => {setPrueba(false)} }\r\n                aria-labelledby=\"example-modal-sizes-title-lg\"\r\n                className=\"fade right\"\r\n                dialogClassName=\"modal-side modal-bottom-left modal-notify modal-primary\"\r\n                >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title \r\n                        id=\"example-modal-sizes-title-lg\"\r\n                        className=\"white-text\"\r\n                    >\r\n                        Actividad: <em>Name activity</em>\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    Contenido\r\n                    <button\r\n                        className=\"btn btn-success\"\r\n                    >\r\n                        Guardar\r\n                    </button>\r\n                </Modal.Body>\r\n            </Modal> */}\r\n        </>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const ModalHeader = ( { \r\n    title,\r\n    textColor,\r\n} ) => {\r\n    let classColor;\r\n\r\n    switch ( textColor ) {\r\n        case 'black':\r\n            classColor = 'text-black';\r\n            break;\r\n        case 'white':\r\n            classColor = 'text-white';\r\n            break;\r\n    \r\n        default:\r\n            classColor = 'text-white';\r\n            break;\r\n    }\r\n\r\n\treturn (\r\n\t\t<Modal.Header closeButton>\r\n\t\t\t<Modal.Title\r\n\t\t\t\tclassName={ classColor }\r\n\t\t\t>\r\n\t\t\t\t{ title }\r\n\t\t\t</Modal.Title>\r\n\t\t</Modal.Header>\r\n\t);\r\n};\r\n\r\nModalHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    textColor: PropTypes.string,\r\n}","import React from \"react\";\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\nexport const ModalBody = ({ aditionalClass = '', children }) => {\r\n\treturn (\r\n\t\t<Modal.Body className={ aditionalClass }>\r\n            { children }\r\n\t\t</Modal.Body>\r\n\t);\r\n};\r\n\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { ActivityNotes } from \"./ActivityNotes\";\r\nimport { ActivityMessages } from \"./ActivityMessages\";\r\nimport { NoteForm } from \"../notes/NoteForm\";\r\nimport { MessageForm } from \"../messages/MessageForm\";\r\nimport { Navtabs } from \"../ui/Tabs/Navtabs\";\r\nimport { Paneltabs } from \"../ui/Tabs/Paneltabs\";\r\nimport { FloatingButton } from \"../ui/FloatingButton/FloatingButton\";\r\nimport { CustomModal } from \"../ui/Modal/CustomModal\";\r\nimport { ModalHeader } from \"../ui/Modal/ModalHeader\";\r\nimport { ModalBody } from \"../ui/Modal/ModalBody\";\r\nimport { hideSideModal, showSideModal } from \"../../actions/uiActions\";\r\n\r\nexport const ActivityInfo = () => {\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst { activeActivity } = useSelector(state => state.activities);\r\n\tconst { openSideModal } = useSelector(state => state.ui);\r\n\tconst { title, description } = activeActivity || {};\r\n\t\r\n\tconst [tabNotesOpen, setTabNotesOpen] = useState(true); /** true */\r\n\r\n\tconst onHideSideModal = () => {\r\n\t\tdispatch( hideSideModal() );\r\n\t};\r\n\r\n\tconst onShowSideModal = () => {\r\n\t\tdispatch( showSideModal() );\r\n\t};\r\n\r\n\tconst titleHeader = tabNotesOpen ? 'Nueva nota' : 'Nuevo comentario';\r\n\r\n\tconst modalHeader = (\r\n\t\t<ModalHeader\r\n\t\t\ttitle={ titleHeader }\r\n\t\t\ttextColor='white'\r\n\t\t/>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className=\"row\">\r\n\t\t\t<div className=\"container-body-modal\">\r\n\t\t\t\t<div className=\"child-div mh-20-vh square scrollbar-dusty-grass square thin\">\r\n\t\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t\t<h4>{ title }</h4>\r\n\r\n\t\t\t\t\t\t<p className=\"text-justify\">\r\n                            { description }\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"child-div h-45-vh square scrollbar-dusty-grass square thin mt-3 mb-3\">\r\n\t\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t\t<Navtabs\r\n\t\t\t\t\t\t\ttabNotesOpen={ tabNotesOpen }\r\n\t\t\t\t\t\t\tsetTabNotesOpen={ setTabNotesOpen }\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<Paneltabs>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<ActivityNotes\r\n\t\t\t\t\t\t\t\tshow={ tabNotesOpen }\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<ActivityMessages\r\n\t\t\t\t\t\t\t\tshow={ !tabNotesOpen }\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t</Paneltabs>\r\n\r\n\t\t\t\t\t\t<FloatingButton\r\n\t\t\t\t\t\t\tvariant='primary'\r\n\t\t\t\t\t\t\ticon={ tabNotesOpen ? 'fas fa-plus' : 'fas fa-comment-medical' }\r\n\t\t\t\t\t\t\taditionalClass=\"fab-bottom-modal\"\r\n\t\t\t\t\t\t\tonClick={ onShowSideModal }\r\n\t\t\t\t\t\t/>\r\n                    </div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<CustomModal\r\n\t\t\t\theader={ modalHeader }\r\n\t\t\t\topenModal={ openSideModal }\r\n\t\t\t\tonHide={ onHideSideModal }\r\n\t\t\t\tvariant='primary'\r\n\t\t\t\tstyleModal='side'\r\n\t\t\t\tposition='bottom-right'\r\n\t\t\t>\r\n\t\t\t\t<ModalBody>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttabNotesOpen\r\n\t\t\t\t\t\t\t? <NoteForm />\r\n\t\t\t\t\t\t\t: <MessageForm />\r\n\t\t\t\t\t}\r\n\t\t\t\t</ModalBody>\r\n\t\t\t</CustomModal>\r\n\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { startAddActivity, startUpdateActivity } from \"../../actions/activityActions\";\r\n\r\nexport const ActivityForm = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { activeActivity } = useSelector(state => state.activities)\r\n    const { title = '', description = '' } = activeActivity || {};\r\n\r\n    const initialState = {\r\n        formTitle: title,\r\n        formDescription: description,\r\n    };\r\n\r\n    const [ formValues, handleInputChange ] = useForm( initialState );\r\n\r\n    const { formTitle, formDescription } = formValues;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( !!activeActivity ) {\r\n            dispatch( startUpdateActivity( formTitle, formDescription ) );\r\n        } else {\r\n            dispatch( startAddActivity( formTitle, formDescription ) );\r\n        }\r\n    }\r\n\r\n\treturn (\r\n\t\t<div className=\"row\">\r\n            <div className=\"container-body-modal justify-content-start\">\r\n                <div className=\"child-div mh-65-vh square scrollbar-dusty-grass square thin\">\r\n                    <div className=\"col-12\">\r\n                        <Form>\r\n                            <Form.Group>\r\n                                <Form.Label htmlFor='formTitle'>Título de la actividad</Form.Label>\r\n                                <Form.Control \r\n                                    id='formTitle'\r\n                                    type=\"text\" \r\n                                    name='formTitle'\r\n                                    value={ formTitle }\r\n                                    autoComplete='off'\r\n                                    onChange={ handleInputChange }\r\n                                    placeholder=\"Ingrese el nombre de la actividad\"\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group>\r\n                                <Form.Label htmlFor='formDescription'>Descripción de la actividad</Form.Label>\r\n                                <Form.Control \r\n                                    id='formDescription'\r\n                                    as=\"textarea\"\r\n                                    rows=\"3\" \r\n                                    name='formDescription'\r\n                                    value={ formDescription }\r\n                                    onChange={ handleInputChange }\r\n                                    placeholder=\"Ingrese la descripción de la actividad\" \r\n                                    className={\r\n                                        `no-resizable square square thin \r\n                                        ${ !!activeActivity \r\n                                            ? 'scrollbar-light-green' \r\n                                            : 'scrollbar-dusty-grass' \r\n                                        }\r\n                                    `}\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Button \r\n                                variant={ ( !!activeActivity ) ? 'success' : 'primary' } \r\n                                type=\"submit\"\r\n                                block={ true }\r\n                                onClick={ handleSubmit }\r\n                            >\r\n                                Guardar\r\n                            </Button>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from \"react\";\r\n\r\nexport const NoActivities = ({onClickFormActivity}) => {\r\n\treturn (\r\n\t\t<div className=\"row justify-content-md-center\">\r\n\t\t\t<div className=\"col-10\">\r\n\t\t\t\t<div className=\"jumbotron text-center blue-grey lighten-5\">\r\n\t\t\t\t\t<h2 className=\"card-title h2\">No hay actividades en el proyecto</h2>\r\n\r\n\t\t\t\t\t<p className=\"indigo-text my-4 font-weight-bold\">\r\n\t\t\t\t\t\tLas actividades deben ser pequeñas para que cada actividad sea fácil y rápida de crear\r\n\t\t\t\t\t</p>\r\n\r\n\t\t\t\t\t<div className=\"row d-flex justify-content-center\">\r\n\t\t\t\t\t\t<div className=\"col-xl-7 pb-2\">\r\n\t\t\t\t\t\t\t<p className=\"card-text\">\r\n\t\t\t\t\t\t\t\tLorem ipsum dolor sit amet, consectetur adipisicing elit. Fuga\r\n\t\t\t\t\t\t\t\taliquid dolorem ea distinctio exercitationem delectus qui, quas\r\n\t\t\t\t\t\t\t\teum architecto, amet quasi accusantium, fugit consequatur\r\n\t\t\t\t\t\t\t\tducimus obcaecati numquam molestias hic itaque accusantium\r\n\t\t\t\t\t\t\t\tdoloremque laudantium, totam rem aperiam.\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<hr className=\"my-4 pb-2\" />\r\n\r\n\t\t\t\t\t<button \r\n\t\t\t\t\t\tclassName=\"btn btn-lg btn-indigo btn-rounded\"\r\n\t\t\t\t\t\tonClick={onClickFormActivity}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tCrear actividad ahora <i className=\"fas fa-tasks\"></i>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom';\r\nimport { Tooltip, OverlayTrigger } from 'react-bootstrap';\r\n\r\nexport const ProjectInfo = () => {\r\n    \r\n    const { activeProject } = useSelector(state => state.projects);\r\n    const { id, area, title, description } = activeProject || {};\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col\">\r\n                <div className=\"row justify-content-end\">\r\n                    <OverlayTrigger\r\n                        placement=\"left\"\r\n                        overlay={ <Tooltip>Editar el proyecto</Tooltip> }\r\n                    >\r\n                        <Link\r\n                            className=\"btn btn-success\"\r\n                            to={`/projects/form/${ id }`}\r\n                        >\r\n                            <i className=\"fas fa-edit\"></i>\r\n                        </Link>\r\n                    </OverlayTrigger>\r\n                </div>\r\n            </div>\r\n            <div className=\"container-body-modal justify-content-start\">\r\n                <div className=\"child-div mh-65-vh square scrollbar-dusty-grass square thin\">\r\n                    <div className=\"col-12\">\r\n\r\n                        <div className=\"row d-inline\">\r\n                            <h3>Área designada</h3>\r\n                            <span>{ area }</span>\r\n                        </div>\r\n                        <hr/>\r\n                        <div className=\"row d-inline\">\r\n                            <h3>Nombre del proyecto</h3>\r\n                            <span>{ title }</span>\r\n                        </div>\r\n                        <hr/>\r\n                        <div className=\"row d-inline\">\r\n                            <h3>Descripción</h3>\r\n                            <span>{ description }</span>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n\t\t</div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport moment from \"moment\";\r\nimport { useLocation, Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\r\n\r\nimport { Activities } from './Activities';\r\nimport { ActivityInfo } from './ActivityInfo';\r\nimport { ActivityForm } from './ActivityForm';\r\nimport { NoActivities } from './NoActivities';\r\nimport { ProjectInfo } from '../projects/ProjectInfo';\r\nimport { NoProjectFound } from '../projects/NoProjectFound';\r\nimport { CustomModal } from '../ui/Modal/CustomModal';\r\nimport { ModalHeader } from '../ui/Modal/ModalHeader';\r\nimport { ModalBody } from '../ui/Modal/ModalBody';\r\nimport { Loading } from '../ui/Loading/Loading';\r\nimport { FloatingButton } from '../ui/FloatingButton/FloatingButton';\r\n\r\nimport { \r\n    startLoadActivities, \r\n    startDeleteActivity, \r\n    clearActiveActivity \r\n} from '../../actions/activityActions';\r\nimport { \r\n    showModal, \r\n    hideModal, \r\n    showConfirmModal, \r\n    hideConfirmModal, \r\n    setModalIsForm \r\n} from '../../actions/uiActions';\r\n\r\nimport 'moment/locale/es';\r\n\r\nexport const ActivityScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const idProject = useLocation().pathname.split('/')[2];\r\n\r\n    const { activities, loading, activeActivity } = useSelector(state => state.activities);\r\n    const { activeProject, loading: projectLoading } = useSelector(state => state.projects);\r\n    const { openModal, openConfirmModal, isForm } = useSelector(state => state.ui);\r\n\r\n    const [infoProject, setInfoProject] = useState( false );\r\n\r\n    const startDateActivity = moment( activeActivity?.created_at ).format('LL');\r\n    const endDateActivity = moment( activeActivity?.updated_at ).format('LL');\r\n\r\n    const onHideModal = () => {\r\n        dispatch( hideModal() );\r\n\r\n        if( infoProject ) {\r\n            setInfoProject( false );\r\n        } else {\r\n            dispatch( clearActiveActivity() );\r\n        }\r\n    }\r\n\r\n    const onShowConfirmModal = () => {\r\n        dispatch( showConfirmModal() );\r\n    };\r\n\r\n    const onHideConfirmModal = () => {\r\n        dispatch( hideConfirmModal() );\r\n    }\r\n\r\n    const onDeleteActivity = () => {\r\n        dispatch( startDeleteActivity() );\r\n    };\r\n\r\n    const onClickFormActivity = () => {\r\n        dispatch( setModalIsForm() );\r\n        dispatch( showModal() );\r\n    }\r\n\r\n    const onShowInfoProject = () => {\r\n        setInfoProject( true );\r\n        dispatch( showModal() );\r\n    }\r\n\r\n    const sectionActivityHeader = (\r\n        <div className=\"row justify-content-around text-black-50 text-center\">\r\n            <div className=\"col-5\">\r\n                <div className=\"row justify-content-start\">\r\n                    Fecha de inicio: { startDateActivity }\r\n                </div>\r\n            </div>\r\n            <div className=\"col-5\">\r\n                <div className=\"row justify-content-start\">\r\n                    Última actualización: { endDateActivity }\r\n                </div>\r\n            </div>\r\n            <div className=\"col-2\">\r\n                <div className=\"row justify-content-end\">\r\n                    <button\r\n                        onClick={ onShowConfirmModal }\r\n                        className=\"btn btn-danger btn-block ml-1\"\r\n                        style={{ zIndex: '999' }}\r\n                    >\r\n                        <i className=\"fas fa-trash\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n    \r\n    const sectionModalBody = () => {\r\n        if( infoProject ) {\r\n            return <ProjectInfo />\r\n        } else if( isForm ) {\r\n            return <ActivityForm />\r\n        } else {\r\n            return <ActivityInfo />\r\n        }\r\n    };\r\n\r\n    const titleActivityHeader = () => {\r\n        if( infoProject ) {\r\n            return 'Información de proyecto';\r\n        } else if( !!activeActivity ) {\r\n            return `Actividad: ${ activeActivity.title }`;\r\n        } else {\r\n            return 'Agregar nueva actividad';\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        /** Cargar las actividades */\r\n        if( !projectLoading ) {\r\n            dispatch( startLoadActivities( idProject ) );\r\n        }\r\n    }, [ dispatch, idProject, projectLoading ]);\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            dispatch( hideModal() );\r\n        }\r\n    }, [ dispatch ])\r\n\r\n    if( loading ) {\r\n        return <div className=\"container-fluid pb-3 pt-3 pl-3 pr-3\">\r\n            <div className=\"col-12 text-center mt-5\">\r\n                <Loading />\r\n            </div>\r\n        </div>\r\n    } else if( !activeProject ) {\r\n        return <NoProjectFound />\r\n    }\r\n\r\n    return (\r\n\t\t<div className=\"container-fluid pb-3 pt-3 pl-3 pr-3 animate__animated animate__fadeIn animate__faster\">\r\n            <div className=\"row justify-content-between ml-1 mr-1 mt-2 mb-2\">\r\n                <OverlayTrigger\r\n                    placement=\"right\"\r\n                    // delay={{ show: 200, hide: 200 }}\r\n                    overlay={ <Tooltip>Información del proyecto</Tooltip> }\r\n                >\r\n                    <button\r\n                        className=\"btn btn-warning btn-info\"\r\n                        onClick={ onShowInfoProject }\r\n                    >\r\n                        <i className=\"fas fa-info\"></i>\r\n                    </button>\r\n                </OverlayTrigger>\r\n                \r\n                <Link \r\n                    className=\"btn btn-indigo\"\r\n                    to=\"/\"\r\n                    style={{zIndex: '999'}}\r\n                >\r\n                    <i className=\"fas fa-arrow-left\"></i>{' '}Regresar\r\n                </Link>\r\n                \r\n            </div>\r\n\r\n            {\r\n                ( activities.length <= 0 )\r\n                    ? <NoActivities\r\n                        onClickFormActivity={onClickFormActivity}\r\n                    />\r\n                    : <Activities />\r\n            }\r\n\r\n            <FloatingButton\r\n                variant='primary'\r\n                icon='fas fa-plus'\r\n                onClick={ onClickFormActivity }\r\n            />\r\n\r\n            <CustomModal\r\n                openModal={ openModal }\r\n                onHide={ onHideModal }\r\n                variant={ ( !!activeActivity && isForm ) ? 'success' : 'primary' }\r\n                styleModal='fluid'\r\n                header={ <ModalHeader title={ titleActivityHeader() } /> }\r\n            >\r\n                <ModalBody>\r\n                    { \r\n                        ( !!activeActivity && !infoProject )\r\n                            && sectionActivityHeader\r\n                    }\r\n                    <hr/>\r\n                    { sectionModalBody() }\r\n                </ModalBody>\r\n            </CustomModal>\r\n\r\n            <CustomModal\r\n                openModal={ openConfirmModal }\r\n                onHide={ onHideConfirmModal }\r\n                variant='danger'\r\n\t\t\t\tstyleModal='side'\r\n\t\t\t\tposition='top-right'\r\n                header={ <ModalHeader title={ 'Eliminar actividad' } /> }\r\n            >\r\n                <ModalBody>\r\n                    <div className=\"row\">\r\n                        <p className=\"text-center\">\r\n                            <b>¿Estás seguro que deseas eliminar la actividad? Esta acción no se podrá deshacer</b>\r\n                        </p>\r\n                        <div className=\"col-6\">\r\n                            <button\r\n                                className=\"btn btn-secondary btn-sm btn-block\"\r\n                                onClick={ onHideConfirmModal }\r\n                            >\r\n                                Cancelar\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <button\r\n                                onClick={ onDeleteActivity }\r\n                                className=\"btn btn-success btn-sm btn-block\"\r\n                            >\r\n                                Continuar\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </ModalBody>\r\n            </CustomModal>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { NavBar } from \"../components/ui/Navbar/NavBar\";\r\nimport { ProjectScreen } from '../components/projects/ProjectScreen';\r\nimport { ProjectForm } from '../components/projects/ProjectForm';\r\nimport { ActivityScreen } from '../components/activities/ActivityScreen';\r\n\r\nimport '../assets/css/bootstrap.min.css';\r\nimport '../assets/css/custom-styles.css';\r\n\r\nexport const DashboardRoutes = () => {\r\n    return (\r\n        <Fragment>\r\n            <NavBar />\r\n                <Switch>\r\n                    <Route \r\n                        exact\r\n                        path=\"/projects\"\r\n                        component={ ProjectScreen }\r\n                    />\r\n                    <Route \r\n                        exact\r\n                        path=\"/projects/form/:id?\"\r\n                        component={ ProjectForm }\r\n                    />\r\n                    <Route \r\n                        exact\r\n                        path=\"/projects/:id/activities\"\r\n                        component={ ActivityScreen }\r\n                    />\r\n                    <Redirect\r\n                        to=\"/projects\"\r\n                    />\r\n                </Switch>\r\n        </Fragment>\r\n    )\r\n}","import React, { Fragment, useEffect } from \"react\";\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { PublicRoutes } from \"./PublicRoutes\";\r\nimport { PrivateRoutes } from \"./PrivateRoutes\";\r\n// import { NavBar } from \"../components/ui/Navbar/NavBar\";\r\nimport { Login } from \"../components/auth/Login\";\r\nimport { Loading } from \"../components/ui/Loading/Loading\";\r\nimport { DashboardRoutes } from \"./DashboardRoutes\";\r\nimport { startChecking } from \"../actions/authActions\";\r\nimport { startProjectLoad } from \"../actions/projectActions\";\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n        dispatch( startChecking() );\r\n    }, [ dispatch ]);\r\n\r\n    if( checking ) {\r\n        return (\r\n            <div className=\"container-fluid pb-3 pt-3 pl-3 pr-3\">\r\n                <div className=\"col-12 text-center mt-5\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        if( !!uid ) {\r\n            dispatch( startProjectLoad() );\r\n        }\r\n    }\r\n\r\n\treturn (\r\n        <Fragment>\r\n            <Router>\r\n                <div>\r\n                    <Switch>\r\n                        <PublicRoutes\r\n                            exact\r\n                            path=\"/login\"\r\n                            component={ Login }\r\n                            isAuthenticated={ !!uid }\r\n                        />\r\n\r\n                        <PrivateRoutes\r\n                            path=\"/\"\r\n                            component={ DashboardRoutes }\r\n                            isAuthenticated={ !!uid }\r\n\t\t\t\t\t    />\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        </Fragment>\r\n\t);\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null,\r\n    // role: null,\r\n};\r\n\r\nexport const authReducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            };\r\n            \r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n            };\r\n        \r\n        case types.authLogout:\r\n            return {\r\n                checking: false,\r\n            };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n};","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    openModal: false,\r\n    openSideModal: false,\r\n    confirmModal: false,\r\n    isForm: false,\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n    switch ( action.type ) {\r\n        case types.uiShowModal:\r\n            return {\r\n                ...state,\r\n                openModal: true,\r\n            };\r\n\r\n        case types.uiHideModal:\r\n            return {\r\n                ...state,\r\n                openModal: false,\r\n            };\r\n\r\n        case types.uiShowSideModal:\r\n            return {\r\n                ...state,\r\n                openSideModal: true,\r\n            };\r\n\r\n        case types.uiHideSideModal:\r\n            return {\r\n                ...state,\r\n                openSideModal: false,\r\n            };\r\n        \r\n        case types.uiShowConfirmModal:\r\n            return {\r\n                ...state,\r\n                openConfirmModal: true,\r\n            };\r\n\r\n        case types.uiHideConfirmModal:\r\n            return {\r\n                ...state,\r\n                openConfirmModal: false,\r\n            };\r\n\r\n        case types.uiIsFormModal:\r\n            return {\r\n                ...state,\r\n                isForm: true,\r\n            };\r\n\r\n        case types.uiIsInfoModal:\r\n            return {\r\n                ...state,\r\n                isForm: false,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import { types } from \"../types/types\";\r\nimport { findElementById } from \"../helpers/filter\";\r\n\r\nconst initialState = {\r\n    projects: [],\r\n    activeProject: null,\r\n    conditionShowProjects: 0,\r\n    showFinishedProjects: false,\r\n    loading: true,\r\n    error: false,\r\n};\r\n\r\nexport const projectReducer = ( state = initialState, action ) => {\r\n    let tempProject;\r\n    switch ( action.type ) {\r\n        case types.projectShowFinishedProjects:\r\n            return {\r\n                ...state,\r\n                showFinishedProjects: !state.showFinishedProjects,\r\n            };\r\n\r\n        case types.projectConditionShowProjects:\r\n            return {\r\n                ...state,\r\n                conditionShowProjects: action.payload.index,\r\n            };\r\n\r\n        case types.projectLoadedProjects:\r\n            return {\r\n                ...state,\r\n                projects: action.payload.projects,\r\n                loading: false,\r\n            };\r\n\r\n        case types.projectSetActiveProject:\r\n            tempProject = findElementById( state.projects, action.payload.id );\r\n            \r\n            return {\r\n                ...state,\r\n                activeProject: tempProject,\r\n                error: ( tempProject ) ? false : true,\r\n            };\r\n\r\n        case types.projectAddedProject:\r\n            return {\r\n                ...state,\r\n                projects: [...state.projects, action.payload.project],\r\n                activeProject: null,\r\n                error: null,\r\n            };\r\n\r\n        case types.projectUpdatedProject:\r\n            return {\r\n                ...state,\r\n                projects: state.projects.map( \r\n                    project => project.id.toString() === state.activeProject.id.toString()\r\n                        ? action.payload.project\r\n                        : project\r\n                ),\r\n                activeProject: null,\r\n                error: null,\r\n            };\r\n        \r\n        case types.projectDoneProject:\r\n            return {\r\n                ...state,\r\n                projects: state.projects.map( \r\n                    project => project.id.toString() === action.payload.id.toString()\r\n                        ? {...project, done: action.payload.done}\r\n                        : project\r\n                ),\r\n            };\r\n\r\n        case types.projectClearActiveProject:\r\n            return {\r\n                ...state,\r\n                activeProject: null,\r\n                error: false,\r\n            };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\nimport { findElementById } from \"../helpers/filter\";\r\n\r\nconst initialState = {\r\n    activities: [],\r\n    activeActivity: null,\r\n    activeNote: null,\r\n    activeMessage: null,\r\n    loading: true,\r\n};\r\n\r\nexport const activityReducer = ( state = initialState, action ) => {\r\n    let tempActivity;\r\n\r\n    switch ( action.type ) {\r\n        case types.activityLoadingFinish:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n            };\r\n\r\n        case types.activityLoadedActivities:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                activities: action.payload.activities\r\n            };\r\n\r\n        case types.activitySetActiveActivity:\r\n            return {\r\n                ...state,\r\n                activeActivity: findElementById( state.activities, action.payload.id ),\r\n            };\r\n\r\n        case types.activityClearActiveActivity:\r\n            return {\r\n                ...state,\r\n                activeActivity: null,\r\n            };\r\n\r\n        case types.activityAddedNote:\r\n            tempActivity = {\r\n                ...state.activeActivity,\r\n                notes: [\r\n                    ...state.activeActivity.notes,\r\n                    action.payload.note\r\n                ]\r\n            };\r\n\r\n            return {\r\n                ...state,\r\n                activeActivity: tempActivity,\r\n                activities: state.activities.map(\r\n                    activity => activity.id.toString() === state.activeActivity.id.toString()\r\n                        ? tempActivity\r\n                        : activity\r\n                )\r\n            };\r\n\r\n        case types.activityCheckedNote:\r\n            tempActivity = {\r\n                ...state.activeActivity,\r\n                notes: state.activeActivity.notes.map(\r\n                    note => note.id.toString() === action.payload.id.toString()\r\n                        ? { ...note, done: action.payload.done }\r\n                        : note\r\n                )\r\n            };\r\n\r\n            return {\r\n                ...state,\r\n                activeActivity: tempActivity,\r\n                activities: state.activities.map(\r\n                    activity => activity.id.toString() === state.activeActivity.id.toString()\r\n                        ? tempActivity\r\n                        : activity\r\n                )\r\n            };\r\n\r\n        case types.activityAddedMessage:\r\n            tempActivity = {\r\n                ...state.activeActivity,\r\n                messages: [\r\n                    ...state.activeActivity.messages,\r\n                    action.payload.message\r\n                ]\r\n            };\r\n\r\n            return {\r\n                ...state,\r\n                activeActivity: tempActivity,\r\n                activities: state.activities.map(\r\n                    activity => activity.id.toString() === state.activeActivity.id.toString()\r\n                        ? tempActivity\r\n                        : activity\r\n                )\r\n            };\r\n\r\n        case types.activityAddedActivity:\r\n            return {\r\n                ...state,\r\n                activities: [ ...state.activities, action.payload.activity ]\r\n            };\r\n\r\n        case types.activityUpdatedActivity:\r\n            return {\r\n                ...state,\r\n                activities: state.activities.map(\r\n                    activity => activity.id.toString() === state.activeActivity.id.toString()\r\n                        ? action.payload.activity\r\n                        : activity\r\n                ),\r\n                activeActivity: null,\r\n            };\r\n\r\n        case types.activityDoneActivity:\r\n            return {\r\n                ...state,\r\n                activities: state.activities.map(\r\n                    activity => activity.id.toString() === action.payload.id.toString()\r\n                        ? { ...activity, done: action.payload.done }\r\n                        : activity\r\n                ),\r\n            };\r\n\r\n        case types.activityDeletedActivity:\r\n            return {\r\n                ...state,\r\n                activeActivity: null,\r\n                activities: state.activities.filter(\r\n                    activity => activity.id.toString() !== state.activeActivity.id.toString()\r\n                        && activity\r\n                )\r\n            };\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n};","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\nimport { projectReducer } from \"./projectReducer\";\r\nimport { activityReducer } from \"./activityReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    projects: projectReducer,\r\n    activities: activityReducer,\r\n});","import { compose, createStore, applyMiddleware } from \"redux\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    ),\r\n);","import React from \"react\";\r\nimport { AppRouter } from \"./routers/AppRouter\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./store/store\";\r\n\r\nexport const TodoApp = () => {\r\n\treturn (\r\n\t\t<Provider store={ store }>\r\n\t\t\t<AppRouter />\r\n\t\t</Provider>\r\n\t);\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { TodoApp } from './TodoApp';\n\nimport './assets/fontawesome-free/css/all.min.css';\nimport 'animate.css';\n\nReactDOM.render(\n  <TodoApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}